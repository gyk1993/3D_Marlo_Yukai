/* ATRIAS3D_FIXEDPARAMETERS_HIP 
 * Generated by writeOptimizedFunctions (10 Oct 2016 10:24:35)
 */

#include <mex.h>
#include "ATRIAS3D_FixedParameters_Hip.h"

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
	double *Mtotal ;
	double *g ;
	double *m1 ;
	double *m2 ;
	double *m3 ;
	double *m4 ;
	double *m5 ;
	double *m6 ;
	double *mT ;
	double *mH ;
	double *L1 ;
	double *L2 ;
	double *L3 ;
	double *L4 ;
	double *LT ;
	double *W ;
	double *Jrotor1 ;
	double *Jrotor2 ;
	double *Jrotor3 ;
	double *r1 ;
	double *r2 ;
	double *r3 ;
	double (*IcmT)[][3] ;
	double (*IcmH)[][3] ;
	double (*Icm1)[][3] ;
	double (*Icm2)[][3] ;
	double (*Icm3)[][3] ;
	double (*Icm4)[][3] ;
	double (*Icm5)[][3] ;
	double (*Icm6)[][3] ;
	double (*Igr1)[][3] ;
	double (*Igr2)[][3] ;
	double (*Igr3)[][3] ;
	double (*Imot1)[][3] ;
	double (*Imot2)[][3] ;
	double (*Imot3)[][3] ;

	/* Check for proper number of arguments. */
	if(nlhs!=36) mexErrMsgTxt("MEX function ATRIAS3D_FixedParameters_Hip expects 36 output arguments.");
	if(nrhs!=0) mexErrMsgTxt("MEX function ATRIAS3D_FixedParameters_Hip expects 0 input arguments.");

	/* Process Inputs */

	/* Define Output variables */
	plhs[0] = mxCreateDoubleMatrix(1,1, mxREAL);
	Mtotal = mxGetPr(plhs[0]) ;
	plhs[1] = mxCreateDoubleMatrix(1,1, mxREAL);
	g = mxGetPr(plhs[1]) ;
	plhs[2] = mxCreateDoubleMatrix(1,1, mxREAL);
	m1 = mxGetPr(plhs[2]) ;
	plhs[3] = mxCreateDoubleMatrix(1,1, mxREAL);
	m2 = mxGetPr(plhs[3]) ;
	plhs[4] = mxCreateDoubleMatrix(1,1, mxREAL);
	m3 = mxGetPr(plhs[4]) ;
	plhs[5] = mxCreateDoubleMatrix(1,1, mxREAL);
	m4 = mxGetPr(plhs[5]) ;
	plhs[6] = mxCreateDoubleMatrix(1,1, mxREAL);
	m5 = mxGetPr(plhs[6]) ;
	plhs[7] = mxCreateDoubleMatrix(1,1, mxREAL);
	m6 = mxGetPr(plhs[7]) ;
	plhs[8] = mxCreateDoubleMatrix(1,1, mxREAL);
	mT = mxGetPr(plhs[8]) ;
	plhs[9] = mxCreateDoubleMatrix(1,1, mxREAL);
	mH = mxGetPr(plhs[9]) ;
	plhs[10] = mxCreateDoubleMatrix(1,1, mxREAL);
	L1 = mxGetPr(plhs[10]) ;
	plhs[11] = mxCreateDoubleMatrix(1,1, mxREAL);
	L2 = mxGetPr(plhs[11]) ;
	plhs[12] = mxCreateDoubleMatrix(1,1, mxREAL);
	L3 = mxGetPr(plhs[12]) ;
	plhs[13] = mxCreateDoubleMatrix(1,1, mxREAL);
	L4 = mxGetPr(plhs[13]) ;
	plhs[14] = mxCreateDoubleMatrix(1,1, mxREAL);
	LT = mxGetPr(plhs[14]) ;
	plhs[15] = mxCreateDoubleMatrix(1,1, mxREAL);
	W = mxGetPr(plhs[15]) ;
	plhs[16] = mxCreateDoubleMatrix(1,1, mxREAL);
	Jrotor1 = mxGetPr(plhs[16]) ;
	plhs[17] = mxCreateDoubleMatrix(1,1, mxREAL);
	Jrotor2 = mxGetPr(plhs[17]) ;
	plhs[18] = mxCreateDoubleMatrix(1,1, mxREAL);
	Jrotor3 = mxGetPr(plhs[18]) ;
	plhs[19] = mxCreateDoubleMatrix(1,1, mxREAL);
	r1 = mxGetPr(plhs[19]) ;
	plhs[20] = mxCreateDoubleMatrix(1,1, mxREAL);
	r2 = mxGetPr(plhs[20]) ;
	plhs[21] = mxCreateDoubleMatrix(1,1, mxREAL);
	r3 = mxGetPr(plhs[21]) ;
	plhs[22] = mxCreateDoubleMatrix(3,3, mxREAL);
	IcmT = (double (*)[][3]) mxGetPr(plhs[22]) ;
	plhs[23] = mxCreateDoubleMatrix(3,3, mxREAL);
	IcmH = (double (*)[][3]) mxGetPr(plhs[23]) ;
	plhs[24] = mxCreateDoubleMatrix(3,3, mxREAL);
	Icm1 = (double (*)[][3]) mxGetPr(plhs[24]) ;
	plhs[25] = mxCreateDoubleMatrix(3,3, mxREAL);
	Icm2 = (double (*)[][3]) mxGetPr(plhs[25]) ;
	plhs[26] = mxCreateDoubleMatrix(3,3, mxREAL);
	Icm3 = (double (*)[][3]) mxGetPr(plhs[26]) ;
	plhs[27] = mxCreateDoubleMatrix(3,3, mxREAL);
	Icm4 = (double (*)[][3]) mxGetPr(plhs[27]) ;
	plhs[28] = mxCreateDoubleMatrix(3,3, mxREAL);
	Icm5 = (double (*)[][3]) mxGetPr(plhs[28]) ;
	plhs[29] = mxCreateDoubleMatrix(3,3, mxREAL);
	Icm6 = (double (*)[][3]) mxGetPr(plhs[29]) ;
	plhs[30] = mxCreateDoubleMatrix(3,3, mxREAL);
	Igr1 = (double (*)[][3]) mxGetPr(plhs[30]) ;
	plhs[31] = mxCreateDoubleMatrix(3,3, mxREAL);
	Igr2 = (double (*)[][3]) mxGetPr(plhs[31]) ;
	plhs[32] = mxCreateDoubleMatrix(3,3, mxREAL);
	Igr3 = (double (*)[][3]) mxGetPr(plhs[32]) ;
	plhs[33] = mxCreateDoubleMatrix(3,3, mxREAL);
	Imot1 = (double (*)[][3]) mxGetPr(plhs[33]) ;
	plhs[34] = mxCreateDoubleMatrix(3,3, mxREAL);
	Imot2 = (double (*)[][3]) mxGetPr(plhs[34]) ;
	plhs[35] = mxCreateDoubleMatrix(3,3, mxREAL);
	Imot3 = (double (*)[][3]) mxGetPr(plhs[35]) ;

	/* Invoke function */
	ATRIAS3D_FixedParameters_Hip(Mtotal, g, m1, m2, m3, m4, m5, m6, mT, mH, L1, L2, L3, L4, LT, W, Jrotor1, Jrotor2, Jrotor3, r1, r2, r3, *IcmT, *IcmH, *Icm1, *Icm2, *Icm3, *Icm4, *Icm5, *Icm6, *Igr1, *Igr2, *Igr3, *Imot1, *Imot2, *Imot3) ;
}
