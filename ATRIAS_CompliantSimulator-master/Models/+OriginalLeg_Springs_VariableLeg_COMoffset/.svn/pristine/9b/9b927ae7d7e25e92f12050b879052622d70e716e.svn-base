/* ATRIAS3D_COMPOSITIONS_HIP 
 * Generated by writeOptimizedFunctions (10 Oct 2016 10:24:37)
 */

#include <mex.h>
#include "ATRIAS3D_COMPositions_Hip.h"

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
	double * q ;
	double *pcm ;
	double *pcmT ;
	double *pcmHR ;
	double *pcm1R ;
	double *pcm2R ;
	double *pcm3R ;
	double *pcm4R ;
	double *pcmHL ;
	double *pcm1L ;
	double *pcm2L ;
	double *pcm3L ;
	double *pcm4L ;

	/* Check for proper number of arguments. */
	if(nlhs!=12) mexErrMsgTxt("MEX function ATRIAS3D_COMPositions_Hip expects 12 output arguments.");
	if(nrhs!=1) mexErrMsgTxt("MEX function ATRIAS3D_COMPositions_Hip expects 1 input arguments.");

	/* Process Inputs */
	if(!(mxGetM(prhs[0])==16 && mxGetN(prhs[0])==1) && !(mxGetM(prhs[0])==1 && mxGetN(prhs[0])==16) )
		mexErrMsgTxt("Incorrect dimensions for input #1 - Should be a vector of length 16") ;
	q = mxGetPr(prhs[0]) ;


	/* Define Output variables */
	plhs[0] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcm = mxGetPr(plhs[0]) ;
	plhs[1] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcmT = mxGetPr(plhs[1]) ;
	plhs[2] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcmHR = mxGetPr(plhs[2]) ;
	plhs[3] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcm1R = mxGetPr(plhs[3]) ;
	plhs[4] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcm2R = mxGetPr(plhs[4]) ;
	plhs[5] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcm3R = mxGetPr(plhs[5]) ;
	plhs[6] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcm4R = mxGetPr(plhs[6]) ;
	plhs[7] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcmHL = mxGetPr(plhs[7]) ;
	plhs[8] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcm1L = mxGetPr(plhs[8]) ;
	plhs[9] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcm2L = mxGetPr(plhs[9]) ;
	plhs[10] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcm3L = mxGetPr(plhs[10]) ;
	plhs[11] = mxCreateDoubleMatrix(3,1, mxREAL);
	pcm4L = mxGetPr(plhs[11]) ;

	/* Invoke function */
	ATRIAS3D_COMPositions_Hip(q, pcm, pcmT, pcmHR, pcm1R, pcm2R, pcm3R, pcm4R, pcmHL, pcm1L, pcm2L, pcm3L, pcm4L) ;
}
