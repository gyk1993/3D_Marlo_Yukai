/* ATRIAS3D_FOOTPOINTPOSJACOB_RIGHT 
 * Generated by writeOptimizedFunctions (10 Oct 2016 10:51:12)
 */

#include <mex.h>
#include "ATRIAS3D_FootPointPosJacob_Right.h"

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
	double * q ;
	double *p4R ;
	double (*R1)[][3] ;
	double (*J4R)[][3] ;
	double (*JR1Col)[][9] ;
	double *p4L ;
	double (*R5)[][3] ;
	double (*J4L)[][3] ;
	double (*JR5Col)[][9] ;

	/* Check for proper number of arguments. */
	if(nlhs!=8) mexErrMsgTxt("MEX function ATRIAS3D_FootPointPosJacob_Right expects 8 output arguments.");
	if(nrhs!=1) mexErrMsgTxt("MEX function ATRIAS3D_FootPointPosJacob_Right expects 1 input arguments.");

	/* Process Inputs */
	if(!(mxGetM(prhs[0])==13 && mxGetN(prhs[0])==1) && !(mxGetM(prhs[0])==1 && mxGetN(prhs[0])==13) )
		mexErrMsgTxt("Incorrect dimensions for input #1 - Should be a vector of length 13") ;
	q = mxGetPr(prhs[0]) ;


	/* Define Output variables */
	plhs[0] = mxCreateDoubleMatrix(3,1, mxREAL);
	p4R = mxGetPr(plhs[0]) ;
	plhs[1] = mxCreateDoubleMatrix(3,3, mxREAL);
	R1 = (double (*)[][3]) mxGetPr(plhs[1]) ;
	plhs[2] = mxCreateDoubleMatrix(3,13, mxREAL);
	J4R = (double (*)[][3]) mxGetPr(plhs[2]) ;
	plhs[3] = mxCreateDoubleMatrix(9,13, mxREAL);
	JR1Col = (double (*)[][9]) mxGetPr(plhs[3]) ;
	plhs[4] = mxCreateDoubleMatrix(3,1, mxREAL);
	p4L = mxGetPr(plhs[4]) ;
	plhs[5] = mxCreateDoubleMatrix(3,3, mxREAL);
	R5 = (double (*)[][3]) mxGetPr(plhs[5]) ;
	plhs[6] = mxCreateDoubleMatrix(3,13, mxREAL);
	J4L = (double (*)[][3]) mxGetPr(plhs[6]) ;
	plhs[7] = mxCreateDoubleMatrix(9,13, mxREAL);
	JR5Col = (double (*)[][9]) mxGetPr(plhs[7]) ;

	/* Invoke function */
	ATRIAS3D_FootPointPosJacob_Right(q, p4R, *R1, *J4R, *JR1Col, p4L, *R5, *J4L, *JR5Col) ;
}
