%implements s54_b0_8l9fi_4_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%<SLibGenerateExtModeOutput(system)>
/* SignalConversion: '<S55>/OutportBufferForControlWord' incorporates:
 *  Constant: '<S55>/Constant'
 */
*rty_ControlWord = %<(SLibCG_SE(SLibCGIR_PV(949, 0, 16, 1, "", -1, "", 0)))>;
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[4].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(4, 0, 0)>
%endif
%if SLibCG_ArgAccessed(4, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(4, 0, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Walking01_wit_EnableControlWord(\
%assign comma = ""
%if SLibCG_ArgAccessed(4, 0, 0)
%<comma>%<tSimStructType> * const %<tSimStruct>\
%assign comma = ", "
%endif
%<comma>uint16_T *rty_ControlWord\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(4, 0, fcnProtoType)>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
