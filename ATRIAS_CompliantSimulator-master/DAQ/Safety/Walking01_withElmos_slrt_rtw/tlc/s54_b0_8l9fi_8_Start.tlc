%implements s54_b0_8l9fi_8_Start "C"

%function Start(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
localB->q_clean = 0.0;
localB->ErrorCount = 0.0;
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[8].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Start", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Start"))
%<SLibCG_AccessArg(8, 1, 0)>
%endif
%if SLibCG_ArgAccessed(8, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Start", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Start"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(8, 1, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Walkin_AnomalyDetection_g_Start(\
%assign comma = ""
%if SLibCG_ArgAccessed(8, 1, 0)
%<comma>%<tSimStructType> * const %<tSimStruct>\
%assign comma = ", "
%endif
%<comma>B_AnomalyDetection_Walking0_h_T *localB\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(8, 1, fcnProtoType)>
%endfunction
