%implements s54_b0_8l9fi_InitializeConditions "C"

%function InitializeConditions(block, system) Output
%<SLibCGIRAccessLocalDWork(337, 0)> %% ForEach_itr_n
%<SLibCGIRAccessLocalDWork(336, 0)> %% ForEach_itr
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
int32_T i;
%closefile localVarDecl
%assign _modelSS = ""

%assign tlcInitializeConditionsFcnOfS39B62 = OpaqueTLCBlockFcn("InitializeConditions", 39, 62, 9, 71)
%assign tlcInitializeConditionsFcnOfS39B63 = OpaqueTLCBlockFcn("InitializeConditions", 39, 63, 9, 71)
%assign tlcInitializeConditionsFcnOfS25B2 = OpaqueTLCBlockFcn("InitializeConditions", 25, 2, 9, 71)
%assign tlcInitializeConditionsFcnOfS4B2 = OpaqueTLCBlockFcn("InitializeConditions", 4, 2, 9, 71)
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
/* InitializeConditions for UnitDelay: '<S14>/Unit Delay' */
Walking01_withElmos_DW.UnitDelay_DSTATE_n = %<(SLibCG_SE(SLibCGIR_PV(965, 0, 39, 1, "", -1, "", 0)))>;
for (i = 0; i < 9; i++) {
    /* InitializeConditions for UnitDelay: '<S13>/Unit Delay1' */
    Walking01_withElmos_DW.UnitDelay1_DSTATE[i] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
    /* InitializeConditions for UnitDelay: '<S13>/Unit Delay' */
    Walking01_withElmos_DW.UnitDelay_DSTATE[i] = %<(SLibCG_SE(SLibCGIR_PV(137, 0, 39, 9, "", -1, "i", 0)))>;
}
/* InitializeConditions for UnitDelay: '<S13>/Unit Delay2' */
for (i = 0; i < 6; i++) {
    Walking01_withElmos_DW.UnitDelay2_DSTATE[i] = %<(SLibCG_SE(SLibCGIR_PV(236, 0, 39, 6, "", -1, "i", 0)))>;
}
/* End of InitializeConditions for UnitDelay: '<S13>/Unit Delay2' */

/* InitializeConditions for Iterator SubSystem: '<S13>/EncoderFilters' */
for (ForEach_itr_n = 0; ForEach_itr_n < 19; ForEach_itr_n++) {
    /* InitializeConditions for UnitDelay: '<S24>/Unit Delay' */
    Walking01_withElmos_DW.CoreSubsys[ForEach_itr_n].UnitDelay_DSTATE = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[3], "Initialize",0)
    /* InitializeConditions for Chart: '<S24>/AnomalyDetection' */
%if SLibCG_SystemFcnArgAccessed("Walking01_AnomalyDetection_Init",3,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("Walking01_AnomalyDetection_Init",3,1)
%<SLibCGIRAccessLocalDWork(337, 0)> %% ForEach_itr_n
%endif
%if SLibCG_SystemFcnArgAccessed("Walking01_AnomalyDetection_Init",3,2)
%<SLibCGIRAccessLocalDWork(337, 0)> %% ForEach_itr_n
%endif

%<SLibCGIRGenReusableSysCall("Walking01_AnomalyDetection_Init", ["%<_modelSS>", "&Walking01_withElmos_B.CoreSubsys[ForEach_itr_n].sf_AnomalyDetection", "&Walking01_withElmos_DW.CoreSubsys[ForEach_itr_n].sf_AnomalyDetection"], 3, 0, 2, 0, 2, 39)>\
%endif
%<tlcInitializeConditionsFcnOfS4B2>\
}
/* End of InitializeConditions for SubSystem: '<S13>/EncoderFilters' */

/* InitializeConditions for RateTransition: '<S5>/Rate Transition2' */
Walking01_withElmos_DW.RateTransition2_Buffer0[0] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
Walking01_withElmos_DW.RateTransition2_Buffer0[1] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
Walking01_withElmos_DW.RateTransition2_Buffer0[2] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
/* InitializeConditions for UnitDelay: '<S13>/Unit Delay4' */
memcpy(&Walking01_withElmos_DW.UnitDelay4_DSTATE[0], %<(SLibCGIR_PVAddr(137, 0, 39, 9, "", -1, "", 0))>, 9U * sizeof(real_T));
/* InitializeConditions for UnitDelay: '<S13>/Unit Delay3' */
Walking01_withElmos_DW.UnitDelay3_DSTATE[0] = %<(SLibCG_SE(SLibCGIR_PV(126, 0, 39, 2, "", -1, "", 0)))>;
Walking01_withElmos_DW.UnitDelay3_DSTATE[1] = %<(SLibCG_SE(SLibCGIR_PV(126, 0, 39, 2, "", -1, "", 1)))>;
/* InitializeConditions for Iterator SubSystem: '<S13>/IMUFilters' */
for (ForEach_itr = 0; ForEach_itr < 3; ForEach_itr++) {
    /* InitializeConditions for UnitDelay: '<S117>/Unit Delay' */
    Walking01_withElmos_DW.CoreSubsys_p[ForEach_itr].UnitDelay_DSTATE = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[24], "Initialize",0)
    /* InitializeConditions for Chart: '<S117>/AnomalyDetection' */
%if SLibCG_SystemFcnArgAccessed("Walking_AnomalyDetection_h_Init",24,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("Walking_AnomalyDetection_h_Init",24,1)
%<SLibCGIRAccessLocalDWork(336, 0)> %% ForEach_itr
%endif
%if SLibCG_SystemFcnArgAccessed("Walking_AnomalyDetection_h_Init",24,2)
%<SLibCGIRAccessLocalDWork(336, 0)> %% ForEach_itr
%endif

%<SLibCGIRGenReusableSysCall("Walking_AnomalyDetection_h_Init", ["%<_modelSS>", "&Walking01_withElmos_B.CoreSubsys_p[ForEach_itr].sf_AnomalyDetection", "&Walking01_withElmos_DW.CoreSubsys_p[ForEach_itr].sf_AnomalyDetection"], 24, 0, 2, 0, 2, 39)>\
%endif
%<tlcInitializeConditionsFcnOfS25B2>\
    /* InitializeConditions for RateTransition: '<S117>/Rate Transition1' */
    Walking01_withElmos_DW.CoreSubsys_p[ForEach_itr].RateTransition1_Buffer[0] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
    /* InitializeConditions for RateTransition: '<S117>/Rate Transition2' */
    Walking01_withElmos_DW.CoreSubsys_p[ForEach_itr].RateTransition2_Buffer[0] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
    /* InitializeConditions for RateTransition: '<S117>/Rate Transition8' */
    Walking01_withElmos_DW.CoreSubsys_p[ForEach_itr].RateTransition8_Buffer[0] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
}
/* End of InitializeConditions for SubSystem: '<S13>/IMUFilters' */

/* InitializeConditions for RateTransition: '<S5>/Rate Transition1' */
Walking01_withElmos_DW.RateTransition1_Buffer0[0] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
Walking01_withElmos_DW.RateTransition1_Buffer0[1] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
Walking01_withElmos_DW.RateTransition1_Buffer0[2] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
%<tlcInitializeConditionsFcnOfS39B62>\
%<tlcInitializeConditionsFcnOfS39B63>\
/* InitializeConditions for UnitDelay: '<S212>/Delay Input1' */
Walking01_withElmos_DW.DelayInput1_DSTATE = %<(SLibCG_SE(SLibCGIR_PV(961, 0, 39, 1, "", -1, "", 0)))>;
/* InitializeConditions for UnitDelay: '<S213>/Delay Input1' */
Walking01_withElmos_DW.DelayInput1_DSTATE_c = %<(SLibCG_SE(SLibCGIR_PV(964, 0, 39, 1, "", -1, "", 0)))>;
/* InitializeConditions for Chart: '<S202>/StateLogic' */
Walking01_withElmos_DW.sfEvent = -1;
Walking01_withElmos_DW.is_active_Main = 0U;
Walking01_withElmos_DW.is_Main = Walking01__IN_NO_ACTIVE_CHILD_j;
Walking01_withElmos_DW.is_active_ControllerMode = 0U;
Walking01_withElmos_DW.is_ControllerMode = Walking01__IN_NO_ACTIVE_CHILD_j;
Walking01_withElmos_DW.is_Transition = Walking01__IN_NO_ACTIVE_CHILD_j;
Walking01_withElmos_DW.temporalCounter_i2 = 0U;
Walking01_withElmos_DW.is_active_Stage = 0U;
Walking01_withElmos_DW.is_Stage = Walking01__IN_NO_ACTIVE_CHILD_j;
Walking01_withElmos_DW.is_active_Support = 0U;
Walking01_withElmos_DW.is_Support = Walking01__IN_NO_ACTIVE_CHILD_j;
Walking01_withElmos_DW.temporalCounter_i1 = 0U;
Walking01_withElmos_DW.is_active_Serialize = 0U;
Walking01_withElmos_DW.is_active_ControlStatus = 0U;
Walking01_withElmos_DW.is_ControlStatus = Walking01__IN_NO_ACTIVE_CHILD_j;
Walking01_withElmos_DW.is_active_SerialState = 0U;
Walking01_withElmos_DW.is_SerialState = Walking01__IN_NO_ACTIVE_CHILD_j;
Walking01_withElmos_DW.is_active_c22_LibWalking = 0U;
memset(&Walking01_withElmos_DW.SerialBuffer[0], 0, 1976U * sizeof(real_T));
Walking01_withElmos_DW.SerialIdx = 0.0;
Walking01_withElmos_DW.TransitionStepCount = 0.0;
Walking01_withElmos_DW.WalkingStepCount = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.EnableSwapOnKAAccel = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.EnableSwapOnKASpring = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.EnableBackwardSwap = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.ImpactThresholdKAAccel = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.ImpactThresholdKASpringAbs = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.ImpactThresholdKASpringRel = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.SwapThresholdS = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.AllowDoubleSupport = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.UseGaitTransition = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.NumTransitionSteps = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.TransitionThresholdTorsoVel = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.KAInjection[0] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.KAInjection[1] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.MinDeltaThetaTransition = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.StartSecondGaitOnStep = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.VBLAParams[i] = 0.0;
}
for (i = 0; i < 13; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.BalanceParams[i] = 0.0;
}
for (i = 0; i < 5; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.GaitTweaks[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.TStepInitial = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.TMaxUpdate = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.RunMode = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.UseAbsoluteSwingLA = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.ErrorZeroFactor[i] = 0.0;
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.ErrorVelZeroFactor[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.StanceLegInit = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.ControllerModeInit = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.UsePosingControl = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.TPosing = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.TorsoBackAngle = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.TorsoBackOnStep = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.EnergyControlGain = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.EnergyControlPhi0 = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.VelocityControlTorsoMax = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.VelocityControlTorsoMin = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.VelocityControlTorsoGain = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.VelocityControlTorsoV0 = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.MinDeltaTheta = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.Theta0 = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.KThetaPlus = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.KThetaMinus = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.RollPhaseVelocityThresh = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.RollPhaseSThresh = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.MaxError = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.MaxErrorVel = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.MaxErrorCount = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.K1MidStanceUpdate[i] = 0.0;
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.K2MidStanceUpdate[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.EnableVelocityBasedUpdate = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.VelocityBasedUpdateK1[i] = 0.0;
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.VelocityBasedUpdateK2[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.VelocityBasedUpdateDTheta0 = 0.0;
for (i = 0; i < 12; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Supervisory.VelocityBasedUpdateLimits[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Supervisory.DesiredYawOffset = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.TLastUpdate = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VelocityControlLADelta = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VelocityControlTorsoDelta = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VelocityControlHipDistCur = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VelocityControlHipDistPrev = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VirtualSpringMode = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VirtualSpringStiffness = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VirtualSpringDamping = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VirtualSpringModAmplitude = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VirtualSpringModRate = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Discrete.VirtualSpringRestPos = 0.0;
for (i = 0; i < 78; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.H0[i] = 0.0;
}
for (i = 0; i < 36; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.HAlpha[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Output.ThetaLimits[0] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.ThetaLimits[1] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.Theta.c0 = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.Theta.ct = 0.0;
for (i = 0; i < 13; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.Theta.cq[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Output.Theta.t0 = 0.0;
for (i = 0; i < 7; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.Theta.cz[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Output.SaturateS = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.SLimits[0] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.SLimits[1] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.EnforceIncreasingS = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.UseCorrection = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.SMaxCorrection = 0.0;
for (i = 0; i < 30; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.HAlphaCorrection[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Output.Phi.c0 = 0.0;
for (i = 0; i < 13; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.Phi.cq[i] = 0.0;
}
for (i = 0; i < 20; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.PhiAlpha[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Output.SaturateR = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.RLimits[0] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Output.RLimits[1] = 0.0;
for (i = 0; i < 30; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.HBarAlpha[i] = 0.0;
}
for (i = 0; i < 12; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.HBarLimits[i] = 0.0;
}
for (i = 0; i < 36; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Output.HAlphaStar[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Output.YawLimit = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Feedback.kp[i] = 0.0;
    Walking01_withElmos_DW.ControlParamsPrev.Feedback.kd[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Feedback.epsilon[0] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.epsilon[1] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kff_grav[0] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kff_grav[1] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.delta_grav = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kff_decoup[0] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kff_decoup[1] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kd_torso[0] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kd_torso[1] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kp_2dof = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kd_2dof = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kpre_2dof = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kp_lat = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.kd_lat = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.q3d_min_lat = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.q3d_max_lat = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.w_torso_lat = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Feedback.u_ff[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Feedback.LateralControlMode = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.DecouplingMode = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.Use2DOF = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.UseDSGravComp = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.lat_bias = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.lat_bias2 = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.linkFeedback = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.RIO = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Feedback.SelectFeedforward = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_DW.ControlParamsPrev.Feedback.FeedforwardGain[i] = 0.0;
}
Walking01_withElmos_DW.ControlParamsPrev.Feedback.EnableFeedforwardOnStep = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Saturation.UseQPSaturation = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Saturation.QPWeight[0] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Saturation.QPWeight[1] = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Saturation.UseKASaturation = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Saturation.KASaturationS1 = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Saturation.KASaturationS2 = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Saturation.KASaturationEarly = 0.0;
Walking01_withElmos_DW.ControlParamsPrev.Saturation.KASaturationMax = 0.0;
Walking01_withElmos_DW.ControlStatePrev.ControllerMode = 0.0;
Walking01_withElmos_DW.ControlStatePrev.SupportState = 0.0;
Walking01_withElmos_DW.ControlStatePrev.StanceLeg = 0.0;
Walking01_withElmos_DW.ControlStatePrev.InDoubleSupport = 0.0;
Walking01_withElmos_DW.ControlStatePrev.RollPhase = 0.0;
Walking01_withElmos_DW.ControlStatePrev.StepCount = 0.0;
Walking01_withElmos_DW.ControlStatePrev.Error = 0.0;
Walking01_withElmos_DW.s = 0.0;
Walking01_withElmos_DW.SerialBufferBegin = 1.0;
Walking01_withElmos_DW.SerialBufferEnd = 1.0;
Walking01_withElmos_DW.theta = 0.0;
Walking01_withElmos_DW.tLastSend = 0.0;
Walking01_withElmos_B.ControlState.ControllerMode = 0.0;
Walking01_withElmos_B.ControlState.SupportState = 0.0;
Walking01_withElmos_B.ControlState.StanceLeg = 0.0;
Walking01_withElmos_B.ControlState.InDoubleSupport = 0.0;
Walking01_withElmos_B.ControlState.RollPhase = 0.0;
Walking01_withElmos_B.ControlState.StepCount = 0.0;
Walking01_withElmos_B.ControlState.Error = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.EnableSwapOnKAAccel = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.EnableSwapOnKASpring = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.EnableBackwardSwap = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.ImpactThresholdKAAccel = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.ImpactThresholdKASpringAbs = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.ImpactThresholdKASpringRel = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.SwapThresholdS = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.AllowDoubleSupport = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.UseGaitTransition = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.NumTransitionSteps = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.TransitionThresholdTorsoVel = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.KAInjection[0] = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.KAInjection[1] = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.MinDeltaThetaTransition = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.StartSecondGaitOnStep = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_B.ControlParams.Supervisory.VBLAParams[i] = 0.0;
}
for (i = 0; i < 13; i++) {
    Walking01_withElmos_B.ControlParams.Supervisory.BalanceParams[i] = 0.0;
}
for (i = 0; i < 5; i++) {
    Walking01_withElmos_B.ControlParams.Supervisory.GaitTweaks[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Supervisory.TStepInitial = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.TMaxUpdate = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.RunMode = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.UseAbsoluteSwingLA = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_B.ControlParams.Supervisory.ErrorZeroFactor[i] = 0.0;
    Walking01_withElmos_B.ControlParams.Supervisory.ErrorVelZeroFactor[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Supervisory.StanceLegInit = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.ControllerModeInit = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.UsePosingControl = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.TPosing = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.TorsoBackAngle = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.TorsoBackOnStep = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.EnergyControlGain = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.EnergyControlPhi0 = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.VelocityControlTorsoMax = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.VelocityControlTorsoMin = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.VelocityControlTorsoGain = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.VelocityControlTorsoV0 = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.MinDeltaTheta = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.Theta0 = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.KThetaPlus = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.KThetaMinus = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.RollPhaseVelocityThresh = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.RollPhaseSThresh = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.MaxError = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.MaxErrorVel = 0.0;
Walking01_withElmos_B.ControlParams.Supervisory.MaxErrorCount = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_B.ControlParams.Supervisory.K1MidStanceUpdate[i] = 0.0;
    Walking01_withElmos_B.ControlParams.Supervisory.K2MidStanceUpdate[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Supervisory.EnableVelocityBasedUpdate = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_B.ControlParams.Supervisory.VelocityBasedUpdateK1[i] = 0.0;
    Walking01_withElmos_B.ControlParams.Supervisory.VelocityBasedUpdateK2[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Supervisory.VelocityBasedUpdateDTheta0 = 0.0;
for (i = 0; i < 12; i++) {
    Walking01_withElmos_B.ControlParams.Supervisory.VelocityBasedUpdateLimits[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Supervisory.DesiredYawOffset = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.TLastUpdate = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VelocityControlLADelta = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VelocityControlTorsoDelta = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VelocityControlHipDistCur = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VelocityControlHipDistPrev = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VirtualSpringMode = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VirtualSpringStiffness = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VirtualSpringDamping = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VirtualSpringModAmplitude = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VirtualSpringModRate = 0.0;
Walking01_withElmos_B.ControlParams.Discrete.VirtualSpringRestPos = 0.0;
for (i = 0; i < 78; i++) {
    Walking01_withElmos_B.ControlParams.Output.H0[i] = 0.0;
}
for (i = 0; i < 36; i++) {
    Walking01_withElmos_B.ControlParams.Output.HAlpha[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Output.ThetaLimits[0] = 0.0;
Walking01_withElmos_B.ControlParams.Output.ThetaLimits[1] = 0.0;
Walking01_withElmos_B.ControlParams.Output.Theta.c0 = 0.0;
Walking01_withElmos_B.ControlParams.Output.Theta.ct = 0.0;
for (i = 0; i < 13; i++) {
    Walking01_withElmos_B.ControlParams.Output.Theta.cq[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Output.Theta.t0 = 0.0;
for (i = 0; i < 7; i++) {
    Walking01_withElmos_B.ControlParams.Output.Theta.cz[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Output.SaturateS = 0.0;
Walking01_withElmos_B.ControlParams.Output.SLimits[0] = 0.0;
Walking01_withElmos_B.ControlParams.Output.SLimits[1] = 0.0;
Walking01_withElmos_B.ControlParams.Output.EnforceIncreasingS = 0.0;
Walking01_withElmos_B.ControlParams.Output.UseCorrection = 0.0;
Walking01_withElmos_B.ControlParams.Output.SMaxCorrection = 0.0;
for (i = 0; i < 30; i++) {
    Walking01_withElmos_B.ControlParams.Output.HAlphaCorrection[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Output.Phi.c0 = 0.0;
for (i = 0; i < 13; i++) {
    Walking01_withElmos_B.ControlParams.Output.Phi.cq[i] = 0.0;
}
for (i = 0; i < 20; i++) {
    Walking01_withElmos_B.ControlParams.Output.PhiAlpha[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Output.SaturateR = 0.0;
Walking01_withElmos_B.ControlParams.Output.RLimits[0] = 0.0;
Walking01_withElmos_B.ControlParams.Output.RLimits[1] = 0.0;
for (i = 0; i < 30; i++) {
    Walking01_withElmos_B.ControlParams.Output.HBarAlpha[i] = 0.0;
}
for (i = 0; i < 12; i++) {
    Walking01_withElmos_B.ControlParams.Output.HBarLimits[i] = 0.0;
}
for (i = 0; i < 36; i++) {
    Walking01_withElmos_B.ControlParams.Output.HAlphaStar[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Output.YawLimit = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_B.ControlParams.Feedback.kp[i] = 0.0;
    Walking01_withElmos_B.ControlParams.Feedback.kd[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Feedback.epsilon[0] = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.epsilon[1] = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kff_grav[0] = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kff_grav[1] = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.delta_grav = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kff_decoup[0] = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kff_decoup[1] = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kd_torso[0] = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kd_torso[1] = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kp_2dof = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kd_2dof = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kpre_2dof = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kp_lat = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.kd_lat = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.q3d_min_lat = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.q3d_max_lat = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.w_torso_lat = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_B.ControlParams.Feedback.u_ff[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Feedback.LateralControlMode = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.DecouplingMode = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.Use2DOF = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.UseDSGravComp = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.lat_bias = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.lat_bias2 = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.linkFeedback = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.RIO = 0.0;
Walking01_withElmos_B.ControlParams.Feedback.SelectFeedforward = 0.0;
for (i = 0; i < 6; i++) {
    Walking01_withElmos_B.ControlParams.Feedback.FeedforwardGain[i] = 0.0;
}
Walking01_withElmos_B.ControlParams.Feedback.EnableFeedforwardOnStep = 0.0;
Walking01_withElmos_B.ControlParams.Saturation.UseQPSaturation = 0.0;
Walking01_withElmos_B.ControlParams.Saturation.QPWeight[0] = 0.0;
Walking01_withElmos_B.ControlParams.Saturation.QPWeight[1] = 0.0;
Walking01_withElmos_B.ControlParams.Saturation.UseKASaturation = 0.0;
Walking01_withElmos_B.ControlParams.Saturation.KASaturationS1 = 0.0;
Walking01_withElmos_B.ControlParams.Saturation.KASaturationS2 = 0.0;
Walking01_withElmos_B.ControlParams.Saturation.KASaturationEarly = 0.0;
Walking01_withElmos_B.ControlParams.Saturation.KASaturationMax = 0.0;
for (i = 0; i < 5; i++) {
    Walking01_withElmos_B.SerialOut[i] = 0.0;
}
/* End of InitializeConditions for Chart: '<S202>/StateLogic' */

/* InitializeConditions for UnitDelay: '<S200>/Unit Delay' */
Walking01_withElmos_DW.UnitDelay_DSTATE_d = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
/* InitializeConditions for Atomic SubSystem: '<S5>/SerialInterfaces' */
/* InitializeConditions for UnitDelay: '<S124>/Unit Delay2' */
memcpy(&Walking01_withElmos_DW.UnitDelay2_DSTATE_o[0], %<(SLibCGIR_PVAddr(137, 0, 39, 9, "", -1, "", 0))>, 9U * sizeof(real_T));
/* InitializeConditions for UnitDelay: '<S124>/Unit Delay1' */
Walking01_withElmos_DW.UnitDelay1_DSTATE_c[0] = %<(SLibCG_SE(SLibCGIR_PV(126, 0, 39, 2, "", -1, "", 0)))>;
Walking01_withElmos_DW.UnitDelay1_DSTATE_c[1] = %<(SLibCG_SE(SLibCGIR_PV(126, 0, 39, 2, "", -1, "", 1)))>;
/* End of InitializeConditions for SubSystem: '<S5>/SerialInterfaces' */

/* InitializeConditions for UnitDelay: '<S200>/Unit Delay1' */
Walking01_withElmos_DW.UnitDelay1_DSTATE_g = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
/* InitializeConditions for S-Function (sdspcount2): '<S21>/Counter' */
Walking01_withElmos_DW.Counter_Count_o = %<(SLibCG_SE(SLibCGIR_PV(961, 0, 39, 1, "", -1, "", 0)))>;
/* InitializeConditions for DiscreteFilter: '<S21>/Discrete Filter' */
memcpy(&Walking01_withElmos_DW.DiscreteFilter_states[0], %<(SLibCGIR_PVAddr(530, 0, 39, 30, "", -1, "", 0))>, 30U * sizeof(real_T));
/* InitializeConditions for UnitDelay: '<S1>/Unit Delay' */
Walking01_withElmos_DW.UnitDelay_DSTATE_k = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
/* InitializeConditions for UnitDelay: '<S1>/Unit Delay1' */
Walking01_withElmos_DW.UnitDelay1_DSTATE_h[0] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
Walking01_withElmos_DW.UnitDelay1_DSTATE_h[1] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
Walking01_withElmos_DW.UnitDelay1_DSTATE_h[2] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
Walking01_withElmos_DW.UnitDelay1_DSTATE_h[3] = %<(SLibCG_SE(SLibCGIR_PV(110, 0, 39, 1, "", -1, "", 0)))>;
/* InitializeConditions for RateTransition: '<S1>/Rate Transition1' */
Walking01_withElmos_DW.RateTransition1_Buffer0_i = %<(SLibCG_SE(SLibCGIR_PV(946, 0, 39, 1, "", -1, "", 0)))>;
/* InitializeConditions for RateTransition: '<S1>/Rate Transition' */
Walking01_withElmos_DW.RateTransition_Buffer0 = %<(SLibCG_SE(SLibCGIR_PV(946, 0, 39, 1, "", -1, "", 0)))>;
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[20], "Initialize",0)
/* InitializeConditions for Chart: '<S35>/Chart' */
%if SLibCG_SystemFcnArgAccessed("Walking01_withElmos_Chart_Init",20,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("Walking01_withElmos_Chart_Init", ["%<_modelSS>", "&Walking01_withElmos_DW.sf_Chart"], 20, 0, 2, 0, 2, 39)>\
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[20], "Initialize",0)

/* InitializeConditions for Chart: '<S37>/Chart' */
%if SLibCG_SystemFcnArgAccessed("Walking01_withElmos_Chart_Init",20,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("Walking01_withElmos_Chart_Init", ["%<_modelSS>", "&Walking01_withElmos_DW.sf_Chart_b"], 20, 1, 2, 0, 2, 39)>\

%endif
/* InitializeConditions for Chart: '<S34>/Chart' */
Walking01_withElmos_DW.sfEvent_a = -1;
Walking01_withElmos_DW.is_Initialization_h = Walking01__IN_NO_ACTIVE_CHILD_j;
Walking01_withElmos_DW.is_active_c20_Walking01_withElm = 0U;
Walking01_withElmos_DW.is_c20_Walking01_withElmos = Walking01__IN_NO_ACTIVE_CHILD_j;
/* InitializeConditions for Chart: '<S36>/Chart' */
Walking01_withElmos_DW.sfEvent_p = -1;
Walking01_withElmos_DW.is_Initialization = Walking01__IN_NO_ACTIVE_CHILD_j;
Walking01_withElmos_DW.is_active_c23_Walking01_withElm = 0U;
Walking01_withElmos_DW.is_c23_Walking01_withElmos = Walking01__IN_NO_ACTIVE_CHILD_j;
/* InitializeConditions for Delay: '<S4>/Resettable Delay' */
Walking01_withElmos_DW.icLoad = 1U;
/* InitializeConditions for S-Function (sdspcount2): '<S19>/Counter' */
Walking01_withElmos_DW.Counter_Count = %<(SLibCG_SE(SLibCGIR_PV(951, 0, 39, 1, "", -1, "", 0)))>;
%closefile cfgTxt
%<cfgTxt>
%assign fcnProtoType = ""
%openfile fcnProtoType
static void InitializeConditions(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(9, 71, fcnProtoType)>
%<LibSetSystemField(system, "CachedInitializeLocalVars", localVarDecl)>
%endfunction
