%implements s54_b0_8l9fi_7_InitializeConditions "C"

%function InitializeConditions(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
localDW->sfEvent = Walking01_withElmo_CALL_EVENT_k;
localDW->is_Initialization = Walking01__IN_NO_ACTIVE_CHILD_b;
localDW->is_active_c22_Walking01_withElm = 0U;
localDW->is_c22_Walking01_withElmos = Walking01__IN_NO_ACTIVE_CHILD_b;
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[7].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Initialize", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))
%<SLibCG_AccessArg(7, 0, 0)>
%endif
%if SLibCG_ArgAccessed(7, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Initialize", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(7, 0, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Walking01_withElmos_Chart_Init(\
%assign comma = ""
%if SLibCG_ArgAccessed(7, 0, 0)
%<comma>%<tSimStructType> * const %<tSimStruct>\
%assign comma = ", "
%endif
%<comma>DW_Chart_Walking01_withElmos_T *localDW\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(7, 0, fcnProtoType)>
%endfunction
