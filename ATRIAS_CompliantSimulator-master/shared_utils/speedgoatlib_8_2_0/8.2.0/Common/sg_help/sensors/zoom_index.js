dictwords = ["io92x 0 24 224 1 16 160 2 16 144 3 16 144 4 16 144 5 35 192 6 16 160 7 16 160 8 16 144 9 16 160",
	"io97x 0 16 192 1 16 160 2 16 144 3 16 144 4 16 144 5 35 192 6 16 160 7 16 160 8 16 144 9 16 160",
	"programmable 0 16 192 1 16 160 5 10 64 9 28 144",
	"resistor 0 46 212 1 46 188 5 84 107 9 28 152",
	"control 0 16 192 1 16 160 5 10 64 9 28 152",
	"block 0 39 230 1 16 160 5 10 64 9 35 152",
	"dialog 0 28 224",
	"fields 0 28 224",
	"output 0 26 36 1 35 168 6 47 6",
	"port 0 26 36 1 18 24 7 10 4",
	"description 0 10 32 1 18 24",
	"pil 0 10 32",
	"module 0 40 34 5 47 58",
	"unique 0 10 32",
	"identifier 0 10 32",
	"for 0 18 34 8 10 4 9 10 4",
	"each 0 10 32",
	"io99x 0 10 32",
	"installed 0 10 32",
	"your 0 10 32",
	"machine 0 18 34 7 10 4",
	"type 0 40 35 5 10 8",
	"the 0 156 63 1 99 30 5 18 64 7 47 12 8 10 4 9 26 12",
	"this 0 66 62 1 10 4 8 10 8",
	"driver 0 26 38 1 10 4 5 10 64 7 10 4 9 18 12",
	"being 0 10 32",
	"used 0 18 48 9 10 4",
	"with 0 18 34",
	"channel 0 10 32 1 33 26 6 84 30",
	"vector 0 72 60 1 18 10",
	"parameter 0 18 32 1 18 10",
	"allows 0 10 32",
	"enabling 0 10 32",
	"individual 0 10 32",
	"resistors 0 54 60 5 10 32",
	"channels 0 18 48 5 47 58",
	"any 0 10 32",
	"order 0 10 32",
	"take 0 10 32",
	"values 0 18 48",
	"starting 0 10 32",
	"from 0 10 16 1 10 4",
	"row 0 10 16",
	"number 0 47 19 1 33 28",
	"elements 0 10 16",
	"defines 0 18 20",
	"e.g 0 10 16",
	"use 0 18 24",
	"two 0 10 16",
	"enter 0 18 18",
	"initial 0 26 16",
	"value 0 78 28 1 40 20",
	"impedance 0 10 16",
	"scalar 0 33 24",
	"same 0 18 24",
	"length 0 18 24",
	"&#39;channel 0 18 24",
	"should 0 18 24",
	"entered 0 33 28",
	"specified 0 26 28 1 18 10",
	"applied 0 18 20",
	"all 0 26 28 5 26 112",
	"are 0 26 26 7 10 8",
	"set 0 18 18",
	"their 0 10 16",
	"between 0 10 16",
	"time 0 40 30",
	"model 0 33 12 7 10 8",
	"downloaded 0 18 8 7 10 8",
	"and 0 26 11 1 35 164",
	"started 0 10 8",
	"before 0 10 8",
	"impedances 0 10 8",
	"open 0 10 8",
	"circuit 0 10 8",
	"state 0 33 12",
	"maintain 0 10 8",
	"100e6 0 10 8",
	"more 0 18 10",
	"reset 0 26 12",
	"controls 0 10 8",
	"behavior 0 10 8",
	"termination 0 10 8",
	"corresponding 0 10 4",
	"will 0 10 4",
	"&#39;initial 0 10 4",
	"remains 0 10 4",
	"last 0 10 4",
	"attained 0 10 4",
	"while 0 10 4",
	"was 0 10 4",
	"running 0 10 4",
	"show 0 10 4",
	"enables 0 10 4",
	"disables 0 10 4",
	"sample 0 33 6",
	"base 0 10 4",
	"which 0 10 4 1 18 10 5 10 64",
	"gets 0 10 4",
	"its 0 10 4",
	"hit 0 10 2",
	"can 0 10 2",
	"also 0 10 2",
	"inherited 0 10 2",
	"units 0 10 2",
	"seconds 0 10 2",
	"pci 0 26 3 5 158 63",
	"bus 0 26 3",
	"slot 0 26 3",
	"only 0 10 2",
	"one 0 18 2",
	"present 0 18 2",
	"target 0 10 2 7 10 8",
	"leave 0 10 2",
	"default 0 10 2",
	"&#39;-1 0 10 2",
	"automatically 0 10 2",
	"locate 0 10 2",
	"board 0 18 2",
	"than 0 10 2",
	"associated 0 10 2",
	"using 0 10 2",
	"format 0 10 2",
	"busnumber 0 10 2",
	"slotnumber 0 10 2",
	"determine 0 10 2",
	"&#39;getxpcpci 0 10 1",
	"matlab 0 10 1",
	"command 0 10 1",
	"window 0 10 1",
	"dialog_fields_io920.htm 0 6 64",
	"input 1 42 180 6 47 12",
	"ports 1 42 178",
	"requested 1 10 16",
	"resistance 1 10 16 5 33 26",
	"these 1 18 20",
	"dependent 1 18 10",
	"count 1 18 10",
	"&#39;channels 1 18 10",
	"that 1 10 4",
	"trying 1 10 4",
	"assign 1 10 4",
	"may 1 10 4",
	"differ 1 10 4",
	"slightly 1 10 4",
	"actual 1 10 4",
	"input_and_output_ports_io920_prog 1 6 64",
	".htm 1 6 64",
	"pin 2 16 144 3 16 144 4 16 144 6 24 176 7 16 160 8 35 156",
	"mapping 2 16 144 3 16 144 4 16 144 6 16 160 7 16 160 8 28 152",
	"examples 2 16 144 3 16 144 4 16 144 6 16 160 7 16 160 8 28 152",
	"io921-16 2 28 152 5 18 32",
	"io921-12 2 28 152 5 18 32",
	"io921-12_10_pin_mapping.htm 2 6 64",
	"io925 3 28 136",
	"io925_pin_mapping.htm 3 6 64",
	"io926 4 28 136",
	"io926_pin_mapping.htm 4 6 64",
	"series 5 10 64",
	"range 5 10 64",
	"modules 5 10 64 8 10 4",
	"they 5 10 64",
	"have 5 10 64",
	"common 5 10 64",
	"described 5 10 64 9 10 4",
	"&#39;programmable 5 10 64",
	"section 5 10 64 8 10 4",
	"high 5 33 74",
	"density 5 10 32",
	"simulation 5 33 42",
	"configurable 5 18 48",
	"steps 5 18 48",
	"resolution 5 18 48",
	"form 5 60 58",
	"factor 5 47 58",
	"io921-8 5 18 32",
	"bit 5 146 56",
	"255ω 5 60 48",
	"4kω 5 60 48",
	"65kω 5 60 56",
	"io921-24 5 10 32",
	"16mω 5 47 56",
	"io922-8 5 18 32",
	"cpci 5 156 63",
	"io922-12 5 18 32",
	"io922-16 5 18 32",
	"io922-24 5 10 16",
	"potentiometer 5 10 16",
	"io923-8 5 18 16",
	"io923-12 5 18 16",
	"io923-16 5 18 16",
	"io923-24 5 18 16",
	"io924-8 5 18 16",
	"io924-12 5 18 16",
	"io924-16 5 18 8",
	"io924-24 5 18 8",
	"precision 5 10 8",
	"configuration 5 10 8",
	"step 5 10 8",
	"io925-6 5 10 8",
	"1.5mω 5 18 8",
	"0.125ω 5 18 8",
	"io925-9 5 10 8",
	"13.5kω 5 18 8",
	"0.25ω 5 18 8",
	"io925-18 5 10 8",
	"230kω 5 18 8",
	"io926-6 5 10 8",
	"io926-9 5 10 8",
	"io926-18 5 10 8",
	"reed 5 10 8",
	"relays 5 10 8",
	"io941-spdt-32 5 10 8",
	"ruthenium 5 84 12",
	"spdt 5 66 14",
	"io941-spdt-64 5 10 8",
	"io941-spst-32 5 10 4",
	"spst 5 54 6",
	"io941-spst-64 5 10 4",
	"io941-dpdt-25 5 10 4",
	"dpdt 5 18 4",
	"io941-dpdt-50 5 10 4",
	"io941-spdt-s-32 5 10 4",
	"shielded 5 40 4",
	"io941-spdt-s-50 5 10 4",
	"io942-spdt-16 5 10 4",
	"io942-spdt-32 5 10 4",
	"io942-spst-16 5 10 4",
	"io942-spst-32 5 10 4",
	"io942-dpst-16 5 10 4",
	"dpst 5 18 4",
	"io942-dpst-24 5 10 4",
	"io942-spdt-s-32 5 10 4",
	"io942-spst-s-16 5 10 4",
	"io942-spst-s-24 5 10 4",
	"io945-spdt-16 5 10 4",
	"voltage 5 18 2 6 10 4",
	"isolated 5 18 2",
	"digital 5 18 2",
	"inputs 5 18 2",
	"io945-spdt-5 5 10 2",
	"spst-3 5 10 2",
	"rtd 5 10 2",
	"io970-pt100-6 5 10 2",
	"90ω 5 33 2",
	"250ω 5 33 2",
	"io970-pt100-18 5 10 2",
	"io970-pt1000-6 5 10 2",
	"900ω 5 33 2",
	"2500ω 5 33 2",
	"io970-pt1000-18 5 10 2",
	"io971-pt100-6 5 10 2",
	"io971-pt100-18 5 10 2",
	"io971-pt1000-6 5 10 2",
	"io971-pt1000-18 5 10 2",
	"strain 5 10 2",
	"gauge 5 10 2",
	"io972-6-350 5 10 2",
	"350ω 5 18 3",
	"bridge 5 60 3",
	"adjustable 5 60 3",
	"io972-6-1000 5 10 1",
	"1kω 5 18 1",
	"io972-6-2000 5 10 1",
	"2kω 5 18 1",
	"io972-6-3000 5 10 1",
	"3kω 5 18 1",
	"io973-6-350 5 10 1",
	"io973-6-1000 5 10 1",
	"io973-6-2000 5 10 1",
	"io973-6-3000 5 10 1",
	"io92x.htm 5 6 64",
	"io970 6 28 176",
	"io971 6 28 176",
	"signal 6 10 16",
	"ground 6 10 16",
	"ext 6 10 4",
	"io971-6_pin_mapping.htm 6 6 64",
	"io972 7 32 208",
	"io973 7 28 144",
	"switches 7 10 8",
	"shown 7 10 8",
	"picture 7 10 8",
	"above 7 10 8",
	"always 7 10 8",
	"closed 7 10 8",
	"soon 7 10 8",
	"calibration 7 10 4",
	"not 7 10 4",
	"supported 7 10 4",
	"current 7 10 4",
	"speedgoat 7 10 4",
	"__io973.htm 7 6 64",
	"contains 8 10 4",
	"example 8 10 4",
	"mappings 8 10 4",
	"io92x-99x 8 10 4",
	"i_o_pin_mapping_io920.htm 8 6 64",
	"configuring 9 10 4",
	"following 9 10 4",
	"sections 9 10 4",
	"programmable_resistor_control_io92 9 6 64",
	"0.htm 9 6 64"];
skipwords = ["and,or,the,it,is,an,on,we,us,to,of,"];
var STR_FORM_SEARCHFOR = "Search for:";
var STR_FORM_SUBMIT_BUTTON = "Submit";
var STR_FORM_RESULTS_PER_PAGE = "Results per page:";
var STR_FORM_MATCH = "Match:";
var STR_FORM_ANY_SEARCH_WORDS = "any search words";
var STR_FORM_ALL_SEARCH_WORDS = "all search words";
var STR_NO_QUERY = "No search query entered.";
var STR_RESULTS_FOR = "Search results for:";
var STR_NO_RESULTS = "No results";
var STR_RESULT = "result";
var STR_RESULTS = "results";
var STR_PHRASE_CONTAINS_COMMON_WORDS = "Your search query contained too many common words to return the entire set of results available. Please try again with a more specific query for better results.";
var STR_SKIPPED_FOLLOWING_WORDS = "The following word(s) are in the skip word list and have been omitted from your search:";
var STR_SKIPPED_PHRASE = "Note that you can not search for exact phrases beginning with a skipped word";
var STR_SUMMARY_NO_RESULTS_FOUND = "No results found.";
var STR_SUMMARY_FOUND_CONTAINING_ALL_TERMS = "found containing all search terms.";
var STR_SUMMARY_FOUND_CONTAINING_SOME_TERMS = "found containing some search terms.";
var STR_SUMMARY_FOUND = "found.";
var STR_PAGES_OF_RESULTS = "pages of results.";
var STR_POSSIBLY_GET_MORE_RESULTS = "You can possibly get more results searching for";
var STR_ANY_OF_TERMS = "any of the terms";
var STR_DIDYOUMEAN = "Did you mean:";
var STR_SORTEDBY_RELEVANCE = "Sorted by relevance";
var STR_SORTBY_RELEVANCE = "Sort by relevance";
var STR_SORTBY_DATE = "Sort by date";
var STR_SORTEDBY_DATE = "Sorted by date";
var STR_RESULT_TERMS_MATCHED = "Terms matched:";
var STR_RESULT_SCORE = "Score:";
var STR_RESULT_URL = "URL:";
var STR_RESULT_PAGES = "Result Pages:";
var STR_RESULT_PAGES_PREVIOUS = "Previous";
var STR_RESULT_PAGES_NEXT = "Next";
var STR_FORM_CATEGORY = "Category:";
var STR_FORM_CATEGORY_ALL = "All";
var STR_RESULTS_IN_ALL_CATEGORIES = "in all categories";
var STR_RESULTS_IN_CATEGORY = "in category";
var STR_POWEREDBY = "Search powered by";
var STR_MORETHAN = "More than";
var STR_ALL_CATS = "all categories";
var STR_CAT_SUMMARY = "Refine your search by category:";
var STR_OR = "or";
var STR_RECOMMENDED = "Recommended links";
var STR_SEARCH_TOOK = "Search took";
var STR_SECONDS = "seconds";
var STR_MAX_RESULTS = "You have requested more results than served per query. Please try again with a more precise query.";
