/*
 * Automatically Generated from Mathematica.
 * Thu 26 Jan 2017 21:36:56 GMT-05:00
 */
#include "math2mat.hpp"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var)
{
  double t1;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t17;
  double t18;
  double t19;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t30;
  double t31;
  double t32;
  double t33;
  double t34;
  double t35;
  double t36;
  double t37;
  double t38;
  double t39;
  double t40;
  double t41;
  double t42;
  double t43;
  double t44;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t50;
  double t51;
  double t52;
  double t53;
  double t54;
  double t55;
  double t56;
  double t57;
  double t58;
  double t59;
  double t60;
  double t61;
  double t62;
  double t63;
  double t64;
  double t65;
  double t66;
  double t67;
  double t68;
  double t69;
  double t70;
  double t71;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76;
  double t77;
  double t78;
  double t79;
  double t80;
  double t81;
  double t82;
  double t83;
  double t84;
  double t85;
  double t86;
  double t87;
  double t88;
  double t89;
  double t90;
  double t91;
  double t92;
  double t93;
  double t94;
  double t95;
  double t96;
  double t97;
  double t98;
  double t99;
  double t100;
  double t101;
  double t102;
  double t103;
  double t104;
  double t105;
  double t106;
  double t107;
  double t108;
  double t109;
  double t110;
  double t111;
  double t112;
  double t113;
  double t114;
  double t115;
  double t116;
  double t117;
  double t118;
  double t119;
  double t120;
  double t121;
  double t122;
  double t123;
  double t124;
  double t125;
  double t126;
  double t127;
  double t128;
  double t129;
  double t130;
  double t131;
  double t132;
  double t133;
  double t134;
  double t135;
  double t136;
  double t137;
  double t138;
  double t139;
  double t140;
  double t141;
  double t142;
  double t143;
  double t144;
  double t145;
  double t146;
  double t147;
  double t148;
  double t149;
  double t150;
  double t151;
  double t152;
  double t153;
  double t154;
  double t155;
  double t156;
  double t157;
  double t158;
  double t159;
  double t160;
  double t161;
  double t162;
  double t163;
  double t164;
  double t165;
  double t166;
  double t167;
  double t168;
  double t169;
  double t170;
  double t171;
  double t172;
  double t173;
  double t174;
  double t175;
  double t176;
  double t177;
  double t178;
  double t179;
  double t180;
  double t181;
  double t182;
  double t183;
  double t184;
  double t185;
  double t186;
  double t187;
  double t188;
  double t189;
  double t190;
  double t191;
  double t192;
  double t193;
  double t194;
  double t195;
  double t196;
  double t197;
  double t198;
  double t199;
  double t200;
  double t201;
  double t202;
  double t203;
  double t204;
  double t205;
  double t206;
  double t207;
  double t208;
  double t209;
  double t210;
  double t211;
  double t212;
  double t213;
  double t214;
  double t215;
  double t216;
  double t217;
  double t218;
  double t219;
  double t220;
  double t221;
  double t222;
  double t223;
  double t224;
  double t225;
  double t226;
  double t227;
  double t228;
  double t229;
  double t230;
  double t231;
  double t232;
  double t233;
  double t234;
  double t235;
  double t236;
  double t237;
  double t238;
  double t239;
  double t240;
  double t241;
  double t242;
  double t243;
  double t244;
  double t245;
  double t246;
  double t247;
  double t248;
  double t249;
  double t250;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t256;
  double t257;
  double t258;
  double t259;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t269;
  double t270;
  double t271;
  double t272;
  double t273;
  double t274;
  double t275;
  double t276;
  double t277;
  double t278;
  double t279;
  double t280;
  double t281;
  double t282;
  double t283;
  double t284;
  double t285;
  double t286;
  double t287;
  double t288;
  double t289;
  double t290;
  double t291;
  double t292;
  double t293;
  double t294;
  double t295;
  double t296;
  double t297;
  double t298;
  double t299;
  double t300;
  double t301;
  double t302;
  double t303;
  double t304;
  double t305;
  double t306;
  double t307;
  double t308;
  double t309;
  double t310;
  double t311;
  double t312;
  double t313;
  double t314;
  double t315;
  double t316;
  double t317;
  double t318;
  double t319;
  double t320;
  double t321;
  double t322;
  double t323;
  double t324;
  double t325;
  double t326;
  double t327;
  double t328;
  double t329;
  double t330;
  double t331;
  double t332;
  double t333;
  double t334;
  double t335;
  double t336;
  double t337;
  double t338;
  double t339;
  double t340;
  double t341;
  double t342;
  double t343;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t350;
  double t351;
  double t352;
  double t353;
  double t354;
  double t355;
  double t356;
  double t357;
  double t358;
  double t359;
  double t360;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t367;
  double t368;
  double t369;
  double t370;
  double t371;
  double t372;
  double t373;
  double t374;
  double t375;
  double t376;
  double t377;
  double t378;
  double t379;
  double t380;
  double t381;
  double t382;
  double t383;
  double t384;
  double t385;
  double t386;
  double t387;
  double t388;
  double t389;
  double t390;
  double t391;
  double t392;
  double t393;
  double t394;
  double t395;
  double t396;
  double t397;
  double t398;
  double t399;
  double t400;
  t1 = var[6];
  t2 = var[4];
  t3 = Cos(t1);
  t4 = Cos(t2);
  t5 = var[5];
  t6 = Cos(t5);
  t7 = Sin(t1);
  t8 = Sin(t2);
  t9 = var[7];
  t10 = Cos(t9);
  t11 = Sin(t9);
  t12 = -0.0157*t10;
  t13 = -0.1822*t11;
  t14 = t12 + t13;
  t15 = 0.1822*t10;
  t16 = -0.0157*t11;
  t17 = t15 + t16;
  t18 = t3*t4*t6;
  t19 = -1.*t7*t8;
  t20 = t18 + t19;
  t21 = var[9];
  t22 = Sin(t21);
  t23 = Cos(t21);
  t24 = -1.*t23;
  t25 = 1. + t24;
  t26 = 0.4*t25;
  t27 = 0.5137*t23;
  t28 = 0.0014*t22;
  t29 = t26 + t27 + t28;
  t30 = 0.0014*t23;
  t31 = -0.1137*t22;
  t32 = t30 + t31;
  t33 = t23*t10;
  t34 = -1.*t22*t11;
  t35 = t33 + t34;
  t36 = -1.*t10*t22;
  t37 = -1.*t23*t11;
  t38 = t36 + t37;
  t39 = t10*t29;
  t40 = t32*t11;
  t41 = t39 + t40;
  t42 = t10*t32;
  t43 = -1.*t29*t11;
  t44 = t42 + t43;
  t45 = var[8];
  t46 = Cos(t45);
  t47 = Sin(t45);
  t48 = 0.0253*t46;
  t49 = -0.1435*t47;
  t50 = t48 + t49;
  t51 = 0.1435*t46;
  t52 = 0.0253*t47;
  t53 = t51 + t52;
  t54 = var[10];
  t55 = Sin(t54);
  t56 = Cos(t54);
  t57 = -1.*t56;
  t58 = 1. + t57;
  t59 = 0.5*t58;
  t60 = 0.65203*t56;
  t61 = 0.00017*t55;
  t62 = t59 + t60 + t61;
  t63 = 0.00017*t56;
  t64 = -0.15203*t55;
  t65 = t63 + t64;
  t66 = t56*t46;
  t67 = -1.*t55*t47;
  t68 = t66 + t67;
  t69 = -1.*t46*t55;
  t70 = -1.*t56*t47;
  t71 = t69 + t70;
  t72 = t46*t62;
  t73 = t65*t47;
  t74 = t72 + t73;
  t75 = t46*t65;
  t76 = -1.*t62*t47;
  t77 = t75 + t76;
  t78 = Sin(t5);
  t79 = t10*t22;
  t80 = t23*t11;
  t81 = t79 + t80;
  t82 = t46*t55;
  t83 = t56*t47;
  t84 = t82 + t83;
  t85 = var[3];
  t86 = t10*t17;
  t87 = -1.*t14*t11;
  t88 = t86 + t87;
  t89 = t10*t88;
  t90 = -1.*t10*t14;
  t91 = -1.*t17*t11;
  t92 = t90 + t91;
  t93 = -1.*t11*t92;
  t94 = t89 + t93;
  t95 = Sin(t85);
  t96 = -1.*t4*t7;
  t97 = -1.*t3*t6*t8;
  t98 = t96 + t97;
  t99 = -1.*t95*t98;
  t100 = Cos(t85);
  t101 = t3*t100*t78;
  t102 = t99 + t101;
  t103 = t38*t44;
  t104 = t41*t35;
  t105 = t103 + t104;
  t106 = t35*t105;
  t107 = -1.*t81*t41;
  t108 = -1.*t44*t35;
  t109 = t107 + t108;
  t110 = t38*t109;
  t111 = t106 + t110;
  t112 = t46*t53;
  t113 = -1.*t50*t47;
  t114 = t112 + t113;
  t115 = t46*t114;
  t116 = -1.*t46*t50;
  t117 = -1.*t53*t47;
  t118 = t116 + t117;
  t119 = -1.*t47*t118;
  t120 = t115 + t119;
  t121 = t71*t77;
  t122 = t74*t68;
  t123 = t121 + t122;
  t124 = t68*t123;
  t125 = -1.*t84*t74;
  t126 = -1.*t77*t68;
  t127 = t125 + t126;
  t128 = t71*t127;
  t129 = t124 + t128;
  t130 = t6*t11*t7;
  t131 = -1.*t10*t78;
  t132 = t130 + t131;
  t133 = t6*t47*t7;
  t134 = -1.*t46*t78;
  t135 = t133 + t134;
  t136 = t10*t6*t7;
  t137 = t11*t78;
  t138 = t136 + t137;
  t139 = t6*t35*t7;
  t140 = -1.*t38*t78;
  t141 = t139 + t140;
  t142 = t6*t81*t7;
  t143 = -1.*t35*t78;
  t144 = t142 + t143;
  t145 = t46*t6*t7;
  t146 = t47*t78;
  t147 = t145 + t146;
  t148 = t6*t68*t7;
  t149 = -1.*t71*t78;
  t150 = t148 + t149;
  t151 = t6*t84*t7;
  t152 = -1.*t68*t78;
  t153 = t151 + t152;
  t154 = t100*t98;
  t155 = t3*t95*t78;
  t156 = t154 + t155;
  t157 = t3*t4;
  t158 = -1.*t6*t7*t8;
  t159 = t157 + t158;
  t160 = t10*t6;
  t161 = t11*t7*t78;
  t162 = t160 + t161;
  t163 = t3*t4*t11;
  t164 = -1.*t8*t132;
  t165 = t163 + t164;
  t166 = t46*t6;
  t167 = t47*t7*t78;
  t168 = t166 + t167;
  t169 = t3*t4*t47;
  t170 = -1.*t8*t135;
  t171 = t169 + t170;
  t172 = -1.*t6*t11;
  t173 = t10*t7*t78;
  t174 = t172 + t173;
  t175 = t10*t3*t4;
  t176 = -1.*t8*t138;
  t177 = t175 + t176;
  t178 = t6*t38;
  t179 = t35*t7*t78;
  t180 = t178 + t179;
  t181 = t3*t4*t35;
  t182 = -1.*t8*t141;
  t183 = t181 + t182;
  t184 = t6*t35;
  t185 = t81*t7*t78;
  t186 = t184 + t185;
  t187 = t3*t4*t81;
  t188 = -1.*t8*t144;
  t189 = t187 + t188;
  t190 = -1.*t6*t47;
  t191 = t46*t7*t78;
  t192 = t190 + t191;
  t193 = t46*t3*t4;
  t194 = -1.*t8*t147;
  t195 = t193 + t194;
  t196 = t6*t71;
  t197 = t68*t7*t78;
  t198 = t196 + t197;
  t199 = t3*t4*t68;
  t200 = -1.*t8*t150;
  t201 = t199 + t200;
  t202 = t6*t68;
  t203 = t84*t7*t78;
  t204 = t202 + t203;
  t205 = t3*t4*t84;
  t206 = -1.*t8*t153;
  t207 = t205 + t206;
  t208 = t4*t6*t7;
  t209 = t3*t8;
  t210 = t208 + t209;
  t211 = 0.0295*t10;
  t212 = -0.0006*t11;
  t213 = t211 + t212;
  t214 = t3*t11*t8;
  t215 = t4*t132;
  t216 = t214 + t215;
  t217 = 0.021*t46;
  t218 = 0.0014*t47;
  t219 = t217 + t218;
  t220 = t3*t47*t8;
  t221 = t4*t135;
  t222 = t220 + t221;
  t223 = 0.0006*t10;
  t224 = -0.0024*t11;
  t225 = t223 + t224;
  t226 = t10*t3*t8;
  t227 = t4*t138;
  t228 = t226 + t227;
  t229 = 0.0005*t38;
  t230 = -1.*t23*t10;
  t231 = t22*t11;
  t232 = t230 + t231;
  t233 = 0.0001*t232;
  t234 = t229 + t233;
  t235 = t3*t35*t8;
  t236 = t4*t141;
  t237 = t235 + t236;
  t238 = 0.0001*t81;
  t239 = 0.0179*t35;
  t240 = t238 + t239;
  t241 = t3*t81*t8;
  t242 = t4*t144;
  t243 = t241 + t242;
  t244 = -0.0014*t46;
  t245 = -0.0029*t47;
  t246 = t244 + t245;
  t247 = t46*t3*t8;
  t248 = t4*t147;
  t249 = t247 + t248;
  t250 = t3*t68*t8;
  t251 = t4*t150;
  t252 = t250 + t251;
  t253 = t3*t84*t8;
  t254 = t4*t153;
  t255 = t253 + t254;
  t256 = 0.00678*t3;
  t257 = -0.1834*t7;
  t258 = t256 + t257;
  t259 = 0.1834*t3;
  t260 = 0.00678*t7;
  t261 = t259 + t260;
  t262 = t6*t261;
  t263 = -0.00025*t78;
  t264 = t262 + t263;
  t265 = t258*t8;
  t266 = t4*t264;
  t267 = t265 + t266;
  t268 = t4*t258;
  t269 = -1.*t8*t264;
  t270 = t268 + t269;
  t271 = 0.00025*t6;
  t272 = t261*t78;
  t273 = t271 + t272;
  t274 = 0.1786*t3;
  t275 = t17*t7;
  t276 = t274 + t275;
  t277 = t3*t17;
  t278 = -0.1786*t7;
  t279 = t277 + t278;
  t280 = t6*t276;
  t281 = -1.*t14*t78;
  t282 = t280 + t281;
  t283 = t6*t14;
  t284 = t276*t78;
  t285 = t283 + t284;
  t286 = t279*t8;
  t287 = t4*t282;
  t288 = t286 + t287;
  t289 = t4*t279;
  t290 = -1.*t8*t282;
  t291 = t289 + t290;
  t292 = 0.1831*t3;
  t293 = t41*t7;
  t294 = t292 + t293;
  t295 = t3*t41;
  t296 = -0.1831*t7;
  t297 = t295 + t296;
  t298 = t6*t294;
  t299 = -1.*t44*t78;
  t300 = t298 + t299;
  t301 = t6*t44;
  t302 = t294*t78;
  t303 = t301 + t302;
  t304 = t297*t8;
  t305 = t4*t300;
  t306 = t304 + t305;
  t307 = t4*t297;
  t308 = -1.*t8*t300;
  t309 = t307 + t308;
  t310 = 0.1893*t3;
  t311 = t53*t7;
  t312 = t310 + t311;
  t313 = t3*t53;
  t314 = -0.1893*t7;
  t315 = t313 + t314;
  t316 = t6*t312;
  t317 = -1.*t50*t78;
  t318 = t316 + t317;
  t319 = t6*t50;
  t320 = t312*t78;
  t321 = t319 + t320;
  t322 = t315*t8;
  t323 = t4*t318;
  t324 = t322 + t323;
  t325 = t4*t315;
  t326 = -1.*t8*t318;
  t327 = t325 + t326;
  t328 = 0.18312*t3;
  t329 = t74*t7;
  t330 = t328 + t329;
  t331 = t3*t74;
  t332 = -0.18312*t7;
  t333 = t331 + t332;
  t334 = t6*t330;
  t335 = -1.*t77*t78;
  t336 = t334 + t335;
  t337 = t6*t77;
  t338 = t330*t78;
  t339 = t337 + t338;
  t340 = t333*t8;
  t341 = t4*t336;
  t342 = t340 + t341;
  t343 = t4*t333;
  t344 = -1.*t8*t336;
  t345 = t343 + t344;
  t346 = 0.0001*t46;
  t347 = 0.0004*t47;
  t348 = t346 + t347;
  t349 = t6*t273;
  t350 = -1.*t3*t78*t273;
  t351 = -1.*t6*t273;
  t352 = t7*t78*t273;
  t353 = t3*t78*t285;
  t354 = -1.*t174*t285;
  t355 = t174*t285;
  t356 = -1.*t162*t285;
  t357 = -1.*t3*t78*t285;
  t358 = t162*t285;
  t359 = -1.*t3*t78*t303;
  t360 = t186*t303;
  t361 = t3*t78*t303;
  t362 = -1.*t180*t303;
  t363 = -1.*t186*t303;
  t364 = t180*t303;
  t365 = t3*t78*t321;
  t366 = -1.*t192*t321;
  t367 = t192*t321;
  t368 = -1.*t168*t321;
  t369 = -1.*t3*t78*t321;
  t370 = t168*t321;
  t371 = -1.*t3*t78*t339;
  t372 = t204*t339;
  t373 = t3*t78*t339;
  t374 = -1.*t198*t339;
  t375 = -1.*t204*t339;
  t376 = t198*t339;
  t377 = -1.*t279*t7;
  t378 = -1.*t10*t3*t279;
  t379 = t10*t3*t279;
  t380 = -1.*t3*t11*t279;
  t381 = t279*t7;
  t382 = t3*t11*t279;
  t383 = t297*t7;
  t384 = t3*t81*t297;
  t385 = -1.*t297*t7;
  t386 = -1.*t3*t35*t297;
  t387 = -1.*t3*t81*t297;
  t388 = t3*t35*t297;
  t389 = -1.*t315*t7;
  t390 = -1.*t46*t3*t315;
  t391 = t46*t3*t315;
  t392 = -1.*t3*t47*t315;
  t393 = t315*t7;
  t394 = t3*t47*t315;
  t395 = t333*t7;
  t396 = t3*t84*t333;
  t397 = -1.*t333*t7;
  t398 = -1.*t3*t68*t333;
  t399 = -1.*t3*t84*t333;
  t400 = t3*t68*t333;
  p_output1[0]=(0.087060963*t20 + 0.646*t111*t20 + 0.7671*t120*t20 + 0.39465*t129*t20 - 2.35501189*t210 - 0.1349323*t11*t216 - 0.1349323*t10*t228 - 0.1182826*t237*t35 + 0.1182826*t243*t38 - 0.14521203*t249*t46 - 0.14521203*t222*t47 - 0.072268308*t252*t68 + 0.072268308*t255*t71 + 0.7555*t20*t94)*(-1.*var[16] + var[32]) + (0.087060963*t102 + 0.646*t102*t111 + 0.7671*t102*t120 + 0.39465*t102*t129 + 0.7555*t102*t94 - 2.35501189*(t100*t7*t78 - 1.*t159*t95) - 0.1349323*t11*(t100*t162 - 1.*t165*t95) - 0.14521203*t47*(t100*t168 - 1.*t171*t95) - 0.1349323*t10*(t100*t174 - 1.*t177*t95) - 0.1182826*t35*(t100*t180 - 1.*t183*t95) + 0.1182826*t38*(t100*t186 - 1.*t189*t95) - 0.14521203*t46*(t100*t192 - 1.*t195*t95) - 0.072268308*t68*(t100*t198 - 1.*t201*t95) + 0.072268308*t71*(t100*t204 - 1.*t207*t95))*(-1.*var[17] + var[33]) + (0.087060963*t156 + 0.646*t111*t156 + 0.7671*t120*t156 + 0.39465*t129*t156 + 0.7555*t156*t94 - 0.1349323*t11*(t100*t165 + t162*t95) - 0.14521203*t47*(t100*t171 + t168*t95) - 0.1349323*t10*(t100*t177 + t174*t95) - 0.1182826*t35*(t100*t183 + t180*t95) + 0.1182826*t38*(t100*t189 + t186*t95) - 0.14521203*t46*(t100*t195 + t192*t95) - 0.072268308*t68*(t100*t201 + t198*t95) + 0.072268308*t71*(t100*t207 + t204*t95) - 2.35501189*(t100*t159 + t7*t78*t95))*(-1.*var[18] + var[34]) + (-0.00489*t20 - 0.0004*t11*t20 + 0.003*t210 + t213*t216 + t219*t222 + t225*t228 + t234*t237 + t240*t243 + t246*t249 + t20*t348 + 0.646*t111*(t237*(-1.*t243*t306 - 1.*t189*t309 + t363) + t243*(t237*t306 + t183*t309 + t364)) + 0.7671*t120*(t222*(t249*t324 + t195*t327 + t367) + t249*(-1.*t222*t324 - 1.*t171*t327 + t368)) + 0.39465*t129*(t252*(-1.*t255*t342 - 1.*t207*t345 + t375) + t255*(t252*t342 + t201*t345 + t376)) + 0.01272*t255*t68 + 0.00019*t252*t71 - 0.11101*t4*t78 + 0.087060963*(-1.*(t210*t267 + t159*t270 + t352)*t4*t78 + t210*(t351 + t267*t4*t78 - 1.*t270*t78*t8)) + 0.7555*(t216*(t228*t288 + t177*t291 + t355) + t228*(-1.*t216*t288 - 1.*t165*t291 + t356))*t94 - 2.35501189*(t20*(t349 - 1.*t267*t4*t78 + t270*t78*t8) - 1.*t4*t78*(-1.*t20*t267 + t350 - 1.*t270*t98)) - 0.1349323*t10*(t20*(t216*t288 + t165*t291 + t358) + t216*(-1.*t20*t288 + t357 - 1.*t291*t98)) - 0.1349323*t11*(t20*(-1.*t228*t288 - 1.*t177*t291 + t354) + t228*(t20*t288 + t353 + t291*t98)) - 0.1182826*t35*(t20*(t243*t306 + t189*t309 + t360) + t243*(-1.*t20*t306 + t359 - 1.*t309*t98)) + 0.1182826*t38*(t20*(-1.*t237*t306 - 1.*t183*t309 + t362) + t237*(t20*t306 + t361 + t309*t98)) - 0.14521203*t46*(t20*(t222*t324 + t171*t327 + t370) + t222*(-1.*t20*t324 + t369 - 1.*t327*t98)) - 0.14521203*t47*(t20*(-1.*t249*t324 - 1.*t195*t327 + t366) + t249*(t20*t324 + t365 + t327*t98)) - 0.072268308*t68*(t20*(t255*t342 + t207*t345 + t372) + t255*(-1.*t20*t342 + t371 - 1.*t345*t98)) + 0.072268308*t71*(t20*(-1.*t252*t342 - 1.*t201*t345 + t374) + t252*(t20*t342 + t373 + t345*t98)))*(-1.*var[19] + var[35]) + (t162*t213 + t168*t219 + t174*t225 + t180*t234 + t186*t240 + t192*t246 + 0.646*t111*(t180*(-1.*t144*t300 + t363 + t387) + t186*(t141*t300 + t364 + t388)) + 0.7671*t120*(t168*(t147*t318 + t367 + t391) + t192*(-1.*t135*t318 + t368 + t392)) + 0.39465*t129*(t198*(-1.*t153*t336 + t375 + t399) + t204*(t150*t336 + t376 + t400)) + 0.11101*t6 + 0.01272*t204*t68 + 0.00019*t198*t71 - 0.00489*t3*t78 - 0.0004*t11*t3*t78 + t3*t348*t78 + 0.003*t7*t78 - 0.1349323*t11*(t174*(t353 + t377 + t282*t3*t6) + t3*(-1.*t138*t282 + t354 + t378)*t78) - 0.1349323*t10*(t162*(t357 + t381 - 1.*t282*t3*t6) + t3*(t132*t282 + t358 + t382)*t78) - 0.1182826*t35*(t186*(t359 + t383 - 1.*t3*t300*t6) + t3*(t144*t300 + t360 + t384)*t78) + 0.1182826*t38*(t180*(t361 + t385 + t3*t300*t6) + t3*(-1.*t141*t300 + t362 + t386)*t78) - 0.14521203*t47*(t192*(t365 + t389 + t3*t318*t6) + t3*(-1.*t147*t318 + t366 + t390)*t78) - 0.14521203*t46*(t168*(t369 + t393 - 1.*t3*t318*t6) + t3*(t135*t318 + t370 + t394)*t78) - 0.072268308*t68*(t204*(t371 + t395 - 1.*t3*t336*t6) + t3*(t153*t336 + t372 + t396)*t78) + 0.072268308*t71*(t198*(t373 + t397 + t3*t336*t6) + t3*(-1.*t150*t336 + t374 + t398)*t78) - 2.35501189*(t6*(t350 - 1.*t264*t3*t6 + t258*t7) + t3*t78*(t349 - 1.*t264*t78)) + 0.087060963*(t6*(t258*t3 + t352 + t264*t6*t7) + t7*t78*(t351 + t264*t78)) + 0.7555*(t162*(t138*t282 + t355 + t379) + t174*(-1.*t132*t282 + t356 + t380))*t94)*(-1.*var[20] + var[36]) + (0.00297823475925*t3 + t11*t213*t3 + t10*t225*t3 + t234*t3*t35 + t246*t3*t46 + t219*t3*t47 + 0.0054787529725*t7 + 0.0004*t11*t7 - 1.*t348*t7 - 0.1349323*t11*(t10*t3*(t276*t3 + t377) - 1.*t7*(t11*t14 + t378 - 1.*t10*t276*t7)) - 0.1349323*t10*(t11*t3*(-1.*t276*t3 + t381) - 1.*t7*(t10*t14 + t382 + t11*t276*t7)) + 0.1182826*t38*(t3*t35*(t294*t3 + t385) - 1.*t7*(t386 - 1.*t38*t44 - 1.*t294*t35*t7)) - 0.14521203*t47*(t3*(t3*t312 + t389)*t46 - 1.*t7*(t390 + t47*t50 - 1.*t312*t46*t7)) + 0.7671*t120*(t3*t47*(t113 + t391 + t312*t46*t7) + t3*t46*(t116 + t392 - 1.*t312*t47*t7)) - 0.14521203*t46*(t3*(-1.*t3*t312 + t393)*t47 - 1.*t7*(t394 + t46*t50 + t312*t47*t7)) + 0.00019*t3*t68*t71 + 0.072268308*t71*(t3*(t3*t330 + t397)*t68 - 1.*t7*(t398 - 1.*t330*t68*t7 - 1.*t71*t77)) + t240*t3*t81 + 0.646*t111*(t3*(t103 + t388 + t294*t35*t7)*t81 + t3*t35*(t108 + t387 - 1.*t294*t7*t81)) - 0.1182826*t35*(t3*(-1.*t294*t3 + t383)*t81 - 1.*t7*(t384 + t35*t44 + t294*t7*t81)) + 0.01272*t3*t68*t84 + 0.39465*t129*(t3*(t121 + t400 + t330*t68*t7)*t84 + t3*t68*(t126 + t399 - 1.*t330*t7*t84)) - 0.072268308*t68*(t3*(-1.*t3*t330 + t395)*t84 - 1.*t7*(t396 + t68*t77 + t330*t7*t84)) + 0.7555*(t11*t3*(t379 + t10*t276*t7 + t87) + t10*t3*(t380 - 1.*t11*t276*t7 + t90))*t94)*(-1.*var[21] + var[37]) + (1.04250945395514 + 0.02409890878*Power(t10,2) + 0.02409890878*Power(t11,2) + 0.646*Power(t111,2) + 0.7671*Power(t120,2) + 0.39465*Power(t129,2) + t10*t213 - 1.*t11*t225 + t240*t35 + 0.02165754406*Power(t35,2) + t234*t38 + 0.02165754406*Power(t38,2) + t219*t46 + 0.027488637279*Power(t46,2) - 1.*t246*t47 + 0.027488637279*Power(t47,2) + 0.02595377256096*Power(t68,2) + 0.01342377256096*Power(t71,2) + 0.7555*Power(t94,2))*(-1.*var[22] + var[38]) + (0.00211843711*t10 + 0.02418466506*t11 - 0.1182826*(t22*t29 + t23*t32)*t35 + 0.1182826*(-1.*t23*t29 + t22*t32)*t38)*(-1.*var[23] + var[39]) + (-0.003573864359*t46 + 0.021237926305*t47 - 0.072268308*(t55*t62 + t56*t65)*t68 + 0.072268308*(-1.*t56*t62 + t55*t65)*t71)*(-1.*var[24] + var[40]) + (-0.00016559564*t35 - 0.01344873162*t38)*(-1.*var[25] + var[41]) + (-0.00001228561236*t68 - 0.01098695086524*t71)*(-1.*var[26] + var[42]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
#include "matrix.h"

/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 48 && ncols == 1) && 
      !(mrows == 1 && ncols == 48))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var is wrong.");
    }

  /*  Assign pointers to each input.  */
  var = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 1, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var);


}

#else // MATLAB_MEX_FILE

#include "f_impactDynamics7.hh"

namespace symbolic_expression
{
namespace basic
{

void f_impactDynamics7_raw(double *p_output1, const double *var)
{
  // Call Subroutines
  output1(p_output1, var);

}

}
}

#endif // MATLAB_MEX_FILE
