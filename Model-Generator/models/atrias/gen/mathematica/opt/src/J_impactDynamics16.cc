/*
 * Automatically Generated from Mathematica.
 * Thu 26 Jan 2017 21:36:58 GMT-05:00
 */
#include "math2mat.hpp"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var)
{
  double t1;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t17;
  double t18;
  double t19;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t30;
  double t31;
  double t32;
  double t33;
  double t34;
  double t35;
  double t36;
  double t37;
  double t38;
  double t39;
  double t40;
  double t41;
  double t42;
  double t43;
  double t44;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t50;
  double t51;
  double t52;
  double t53;
  double t54;
  double t55;
  double t56;
  double t57;
  double t58;
  double t59;
  double t60;
  double t61;
  double t62;
  double t63;
  double t64;
  double t65;
  double t66;
  double t67;
  double t68;
  double t69;
  double t70;
  double t71;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76;
  double t77;
  double t78;
  double t79;
  double t80;
  double t81;
  double t82;
  double t83;
  double t84;
  double t85;
  double t86;
  double t87;
  double t88;
  double t89;
  double t90;
  double t91;
  double t92;
  double t93;
  double t94;
  double t95;
  double t96;
  double t97;
  double t98;
  double t99;
  double t100;
  double t101;
  double t102;
  double t103;
  double t104;
  double t105;
  double t106;
  double t107;
  double t108;
  double t109;
  double t110;
  double t111;
  double t112;
  double t113;
  double t114;
  double t115;
  double t116;
  double t117;
  double t118;
  double t119;
  double t120;
  double t121;
  double t122;
  double t123;
  double t124;
  double t125;
  double t126;
  double t127;
  double t128;
  double t129;
  double t130;
  double t131;
  double t132;
  double t133;
  double t134;
  double t135;
  double t136;
  double t137;
  double t138;
  double t139;
  double t140;
  double t141;
  double t142;
  double t143;
  double t144;
  double t145;
  double t146;
  double t147;
  double t148;
  double t149;
  double t150;
  double t151;
  double t152;
  double t153;
  double t154;
  double t155;
  double t156;
  double t157;
  double t158;
  double t159;
  double t160;
  double t161;
  double t162;
  double t163;
  double t164;
  double t165;
  double t166;
  double t167;
  double t168;
  double t169;
  double t170;
  double t171;
  double t172;
  double t173;
  double t174;
  double t175;
  double t176;
  double t177;
  double t178;
  double t179;
  double t180;
  double t181;
  double t182;
  double t183;
  double t184;
  double t185;
  double t186;
  double t187;
  double t188;
  double t189;
  double t190;
  double t191;
  double t192;
  double t193;
  double t194;
  double t195;
  double t196;
  double t197;
  double t198;
  double t199;
  double t200;
  double t201;
  double t202;
  double t203;
  double t204;
  double t205;
  double t206;
  double t207;
  double t208;
  double t209;
  double t210;
  double t211;
  double t212;
  double t213;
  double t214;
  double t215;
  double t216;
  double t217;
  double t218;
  double t219;
  double t220;
  double t221;
  double t222;
  double t223;
  double t224;
  double t225;
  double t226;
  double t227;
  double t228;
  double t229;
  double t230;
  double t231;
  double t232;
  double t233;
  double t234;
  double t235;
  double t236;
  double t237;
  double t238;
  double t239;
  double t240;
  double t241;
  double t242;
  double t243;
  double t244;
  double t245;
  double t246;
  double t247;
  double t248;
  double t249;
  double t250;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t256;
  double t257;
  double t258;
  double t259;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t269;
  double t270;
  double t271;
  double t272;
  double t273;
  double t274;
  double t275;
  double t276;
  double t277;
  double t278;
  double t279;
  double t280;
  double t281;
  double t282;
  double t283;
  double t284;
  double t285;
  double t286;
  double t287;
  double t288;
  double t289;
  double t290;
  double t291;
  double t292;
  double t293;
  double t294;
  double t295;
  double t296;
  double t297;
  double t298;
  double t299;
  double t300;
  double t301;
  double t302;
  double t303;
  double t304;
  double t305;
  double t306;
  double t307;
  double t308;
  double t309;
  double t310;
  double t311;
  double t312;
  double t313;
  double t314;
  double t315;
  double t316;
  double t317;
  double t318;
  double t319;
  double t320;
  double t321;
  double t322;
  double t323;
  double t324;
  double t325;
  double t326;
  double t327;
  double t328;
  double t329;
  double t330;
  double t331;
  double t332;
  double t333;
  double t334;
  double t335;
  double t336;
  double t337;
  double t338;
  double t339;
  double t340;
  double t341;
  double t342;
  double t343;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t350;
  double t351;
  double t352;
  double t353;
  double t354;
  double t355;
  double t356;
  double t357;
  double t358;
  double t359;
  double t360;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t367;
  double t368;
  t1 = var[15];
  t2 = var[13];
  t3 = Cos(t1);
  t4 = Cos(t2);
  t5 = Sin(t1);
  t6 = Sin(t2);
  t7 = var[5];
  t8 = var[3];
  t9 = var[11];
  t10 = t3*t4;
  t11 = -1.*t5*t6;
  t12 = t10 + t11;
  t13 = var[4];
  t14 = Cos(t7);
  t15 = Sin(t9);
  t16 = -1.*t4*t5;
  t17 = -1.*t3*t6;
  t18 = t16 + t17;
  t19 = Sin(t7);
  t20 = Sin(t8);
  t21 = Cos(t8);
  t22 = Cos(t9);
  t23 = Cos(t13);
  t24 = t4*t5;
  t25 = t3*t6;
  t26 = t24 + t25;
  t27 = Sin(t13);
  t28 = t14*t18;
  t29 = t12*t15*t19;
  t30 = t28 + t29;
  t31 = t22*t23*t12;
  t32 = t14*t12*t15;
  t33 = -1.*t18*t19;
  t34 = t32 + t33;
  t35 = -1.*t27*t34;
  t36 = t31 + t35;
  t37 = t14*t12;
  t38 = t26*t15*t19;
  t39 = t37 + t38;
  t40 = t22*t23*t26;
  t41 = t14*t26*t15;
  t42 = -1.*t12*t19;
  t43 = t41 + t42;
  t44 = -1.*t27*t43;
  t45 = t40 + t44;
  t46 = var[17];
  t47 = -1.*t46;
  t48 = var[33];
  t49 = t47 + t48;
  t50 = -1.*t22*t12*t27;
  t51 = -1.*t23*t34;
  t52 = t50 + t51;
  t53 = -1.*t22*t26*t27;
  t54 = -1.*t23*t43;
  t55 = t53 + t54;
  t56 = var[18];
  t57 = -1.*t56;
  t58 = var[34];
  t59 = t57 + t58;
  t60 = -1.*t3;
  t61 = 1. + t60;
  t62 = 0.5*t61;
  t63 = 0.65203*t3;
  t64 = 0.00017*t5;
  t65 = t62 + t63 + t64;
  t66 = 0.00017*t3;
  t67 = -0.15203*t5;
  t68 = t66 + t67;
  t69 = t4*t65;
  t70 = t68*t6;
  t71 = t69 + t70;
  t72 = -0.18312*t22;
  t73 = t71*t15;
  t74 = t72 + t73;
  t75 = t4*t68;
  t76 = -1.*t65*t6;
  t77 = t75 + t76;
  t78 = -1.*t23*t15;
  t79 = -1.*t22*t14*t27;
  t80 = t78 + t79;
  t81 = t22*t71;
  t82 = 0.18312*t15;
  t83 = t81 + t82;
  t84 = t14*t74;
  t85 = -1.*t77*t19;
  t86 = t84 + t85;
  t87 = t83*t27;
  t88 = t23*t86;
  t89 = t87 + t88;
  t90 = t22*t23*t14;
  t91 = -1.*t15*t27;
  t92 = t90 + t91;
  t93 = t23*t83;
  t94 = -1.*t27*t86;
  t95 = t93 + t94;
  t96 = -1.*t83*t27;
  t97 = -1.*t23*t86;
  t98 = t96 + t97;
  t99 = t22*t12*t27;
  t100 = t23*t34;
  t101 = t99 + t100;
  t102 = t14*t77;
  t103 = t74*t19;
  t104 = t102 + t103;
  t105 = -1.*t22*t23*t14;
  t106 = t15*t27;
  t107 = t105 + t106;
  t108 = t22*t26*t27;
  t109 = t23*t43;
  t110 = t108 + t109;
  t111 = var[16];
  t112 = -1.*t111;
  t113 = var[32];
  t114 = t112 + t113;
  t115 = -1.*t14*t12;
  t116 = -1.*t26*t15*t19;
  t117 = t115 + t116;
  t118 = -1.*t14*t18;
  t119 = -1.*t12*t15*t19;
  t120 = t118 + t119;
  t121 = t22*t19*t104;
  t122 = t92*t89;
  t123 = t80*t95;
  t124 = t121 + t122 + t123;
  t125 = -1.*t14*t77;
  t126 = -1.*t74*t19;
  t127 = t125 + t126;
  t128 = -1.*t30*t104;
  t129 = -1.*t101*t89;
  t130 = -1.*t36*t95;
  t131 = t128 + t129 + t130;
  t132 = -1.*t22*t19*t104;
  t133 = -1.*t92*t89;
  t134 = -1.*t80*t95;
  t135 = t132 + t133 + t134;
  t136 = t39*t104;
  t137 = t89*t110;
  t138 = t95*t45;
  t139 = t136 + t137 + t138;
  t140 = var[19];
  t141 = -1.*t140;
  t142 = var[35];
  t143 = t141 + t142;
  t144 = -1.*t22*t14*t104;
  t145 = t86*t39;
  t146 = t43*t104;
  t147 = t22*t14*t104;
  t148 = -1.*t86*t30;
  t149 = -1.*t34*t104;
  t150 = -1.*t23*t26*t15;
  t151 = -1.*t22*t14*t26*t27;
  t152 = t150 + t151;
  t153 = -1.*t23*t12*t15;
  t154 = -1.*t22*t14*t12*t27;
  t155 = t153 + t154;
  t156 = t22*t23*t14*t12;
  t157 = -1.*t12*t15*t27;
  t158 = t156 + t157;
  t159 = 0.18312*t22;
  t160 = -1.*t71*t15;
  t161 = t159 + t160;
  t162 = t23*t161;
  t163 = -1.*t14*t83*t27;
  t164 = t162 + t163;
  t165 = t23*t14*t83;
  t166 = t161*t27;
  t167 = t165 + t166;
  t168 = -1.*t23*t14*t15;
  t169 = -1.*t22*t27;
  t170 = t168 + t169;
  t171 = t22*t23*t14*t26;
  t172 = -1.*t26*t15*t27;
  t173 = t171 + t172;
  t174 = Power(t19,2);
  t175 = -1.*t22*t23;
  t176 = t14*t15*t27;
  t177 = t175 + t176;
  t178 = t83*t15;
  t179 = -1.*t22*t14*t86;
  t180 = t178 + t179 + t132;
  t181 = t83*t19*t39;
  t182 = t22*t26*t19*t104;
  t183 = -1.*t22*t83*t174;
  t184 = t15*t19*t104;
  t185 = t22*t26*t83;
  t186 = t86*t43;
  t187 = t185 + t186 + t136;
  t188 = -1.*t83*t15;
  t189 = t22*t14*t86;
  t190 = t188 + t189 + t121;
  t191 = -1.*t83*t19*t30;
  t192 = -1.*t22*t12*t19*t104;
  t193 = Power(t14,2);
  t194 = t22*t83*t174;
  t195 = -1.*t15*t19*t104;
  t196 = -1.*t22*t12*t83;
  t197 = -1.*t34*t86;
  t198 = t196 + t197 + t128;
  t199 = var[20];
  t200 = -1.*t199;
  t201 = var[36];
  t202 = t200 + t201;
  t203 = t22*t26*t161;
  t204 = t15*t161;
  t205 = -1.*t22*t12*t161;
  t206 = -1.*t15*t161;
  t207 = t21*t30;
  t208 = -1.*t20*t36;
  t209 = t207 + t208;
  t210 = -1.*t3*t4;
  t211 = t5*t6;
  t212 = t210 + t211;
  t213 = t14*t18*t15;
  t214 = -1.*t212*t19;
  t215 = t213 + t214;
  t216 = t14*t212;
  t217 = t18*t15*t19;
  t218 = t216 + t217;
  t219 = t22*t23*t18;
  t220 = -1.*t27*t215;
  t221 = t219 + t220;
  t222 = -1.*t4*t65;
  t223 = -1.*t68*t6;
  t224 = t222 + t223;
  t225 = t14*t77*t15;
  t226 = -1.*t224*t19;
  t227 = t225 + t226;
  t228 = t14*t224;
  t229 = t77*t15*t19;
  t230 = t228 + t229;
  t231 = t22*t77*t27;
  t232 = t23*t227;
  t233 = t231 + t232;
  t234 = t22*t23*t77;
  t235 = -1.*t27*t227;
  t236 = t234 + t235;
  t237 = t22*t18*t27;
  t238 = t23*t215;
  t239 = t237 + t238;
  t240 = t22*t19*t230;
  t241 = -1.*t230*t30;
  t242 = -1.*t218*t104;
  t243 = -1.*t22*t19*t230;
  t244 = Power(t22,2);
  t245 = t39*t230;
  t246 = t30*t104;
  t247 = t22*t74;
  t248 = t188 + t247;
  t249 = -1.*t244*t77*t12;
  t250 = -1.*t22*t18*t83;
  t251 = -1.*t22*t74;
  t252 = t178 + t251;
  t253 = t244*t26*t77;
  t254 = t22*t12*t83;
  t255 = Power(t15,2);
  t256 = var[21];
  t257 = -1.*t256;
  t258 = var[37];
  t259 = t257 + t258;
  t260 = -0.0599986395*t101;
  t261 = 0.0000670905*t239;
  t262 = t260 + t261;
  t263 = t262*t114;
  t264 = -0.0599986395*t209;
  t265 = t21*t218;
  t266 = -1.*t20*t221;
  t267 = t265 + t266;
  t268 = 0.0000670905*t267;
  t269 = t264 + t268;
  t270 = t269*t49;
  t271 = t20*t30;
  t272 = t21*t36;
  t273 = t271 + t272;
  t274 = -0.0599986395*t273;
  t275 = t20*t218;
  t276 = t21*t221;
  t277 = t275 + t276;
  t278 = 0.0000670905*t277;
  t279 = t274 + t278;
  t280 = t279*t59;
  t281 = -0.15203*t3;
  t282 = -0.00017*t5;
  t283 = t281 + t282;
  t284 = 0.00001228561236*t18;
  t285 = 0.01098695086524*t212;
  t286 = t284 + t285;
  t287 = var[27];
  t288 = -1.*t287;
  t289 = var[43];
  t290 = t288 + t289;
  t291 = t286*t290;
  t292 = t283*t6;
  t293 = t75 + t292;
  t294 = t4*t283;
  t295 = t294 + t223;
  t296 = t14*t293*t15;
  t297 = -1.*t295*t19;
  t298 = t296 + t297;
  t299 = t101*t135;
  t300 = t14*t295;
  t301 = t293*t15*t19;
  t302 = t300 + t301;
  t303 = t101*t89;
  t304 = t36*t95;
  t305 = t22*t293*t27;
  t306 = t23*t298;
  t307 = t305 + t306;
  t308 = t22*t23*t293;
  t309 = -1.*t27*t298;
  t310 = t308 + t309;
  t311 = t239*t124;
  t312 = -1.*t89*t239;
  t313 = -1.*t95*t221;
  t314 = t22*t19*t302;
  t315 = t218*t190;
  t316 = -1.*t86*t215;
  t317 = -1.*t302*t30;
  t318 = -1.*t22*t19*t302;
  t319 = t30*t180;
  t320 = t34*t86;
  t321 = t39*t302;
  t322 = t22*t18*t248;
  t323 = -1.*t244*t293*t12;
  t324 = -1.*t77*t212;
  t325 = -1.*t18*t15*t74;
  t326 = t22*t12*t252;
  t327 = t244*t26*t293;
  t328 = t18*t77;
  t329 = t12*t15*t74;
  t330 = t21*t39;
  t331 = -1.*t20*t45;
  t332 = t330 + t331;
  t333 = t77*t12;
  t334 = t26*t15*t74;
  t335 = t333 + t185 + t334;
  t336 = -1.*t18*t77;
  t337 = -1.*t12*t15*t74;
  t338 = t336 + t196 + t337;
  t339 = t65*t5;
  t340 = 0.0000670905*t209;
  t341 = -0.0599986395*t332;
  t342 = t340 + t341;
  t343 = t20*t39;
  t344 = t21*t45;
  t345 = t343 + t344;
  t346 = t101*t124;
  t347 = t92*t131;
  t348 = t346 + t347;
  t349 = t110*t135;
  t350 = t92*t139;
  t351 = t349 + t350;
  t352 = t39*t180;
  t353 = t22*t19*t187;
  t354 = t352 + t353;
  t355 = t30*t190;
  t356 = t22*t19*t198;
  t357 = t355 + t356;
  t358 = t22*t26*t252;
  t359 = -1.*t15*t335;
  t360 = t358 + t359;
  t361 = t22*t12*t248;
  t362 = -1.*t15*t338;
  t363 = t361 + t362;
  t364 = -1.*t3*t65;
  t365 = t68*t5;
  t366 = t364 + t365;
  t367 = t3*t68;
  t368 = t367 + t339;
  p_output1[0]=(0.0000670905*(-1.*t20*t30 - 1.*t21*t36) - 0.0599986395*(-1.*t20*t39 - 1.*t21*t45))*t49 + t342*t59;
  p_output1[1]=t114*(0.0000670905*t36 - 0.0599986395*t45) + t49*(-0.0000670905*t20*t52 + 0.0599986395*t20*t55) + (0.0000670905*t21*t52 - 0.0599986395*t21*t55)*t59 + t143*(0.0126*t80 + 0.0000670905*(t135*t45 + t139*t80 + t92*(t45*t89 + t110*t95 + t55*t95 + t45*t98) + t110*(-1.*t80*t89 - 1.*t107*t95 - 1.*t92*t95 - 1.*t80*t98)) - 0.0599986395*(t124*t36 + t131*t80 + t92*(-1.*t36*t89 - 1.*t101*t95 - 1.*t52*t95 - 1.*t36*t98) + t101*(t80*t89 + t107*t95 + t92*t95 + t80*t98)));
  p_output1[2]=t114*(-0.0599986395*t117*t23 + 0.0000670905*t120*t23) + (0.0000670905*(t120*t20*t27 + t21*t34) - 0.0599986395*(t117*t20*t27 + t21*t43))*t49 + (0.0000670905*(-1.*t120*t21*t27 + t20*t34) - 0.0599986395*(-1.*t117*t21*t27 + t20*t43))*t59 + t202*(0.0126*t14*t22 + 0.0000670905*(t14*t187*t22 + (t144 - 1.*t127*t14*t22)*t39 + t180*t43 + t19*t22*(t145 + t146 + t127*t43 + t117*t86)) - 0.0599986395*(t14*t198*t22 + (t147 + t127*t14*t22)*t30 + t190*t34 + t19*t22*(t148 + t149 - 1.*t127*t34 - 1.*t120*t86))) + t143*(-0.0126*t19*t22*t23 + 0.0000670905*(t117*t135*t23 - 1.*t139*t19*t22*t23 + t92*(t145 + t146 + t110*t127*t23 - 1.*t127*t27*t45 + t117*t23*t89 - 1.*t117*t27*t95) + t110*(t144 + t127*t27*t80 - 1.*t19*t22*t86 + t19*t22*t23*t89 - 1.*t127*t23*t92 - 1.*t19*t22*t27*t95)) - 0.0599986395*(t120*t124*t23 - 1.*t131*t19*t22*t23 + t92*(t148 + t149 - 1.*t101*t127*t23 + t127*t27*t36 - 1.*t120*t23*t89 + t120*t27*t95) + t101*(t147 - 1.*t127*t27*t80 + t19*t22*t86 - 1.*t19*t22*t23*t89 + t127*t23*t92 + t19*t22*t27*t95)));
  p_output1[3]=t114*(0.0000670905*t158 - 0.0599986395*t173) + (0.0000670905*(-1.*t155*t20 + t12*t19*t21*t22) - 0.0599986395*(-1.*t152*t20 + t19*t21*t22*t26))*t49 + (0.0000670905*(t155*t21 + t12*t19*t20*t22) - 0.0599986395*(t152*t21 + t19*t20*t22*t26))*t59 + t259*(-0.0126*t22 - 0.0599986395*(-1.*t12*t15*t248 - 1.*t22*t338 + t12*t22*(t206 - 1.*t15*t74) - 1.*t15*(t205 - 1.*t12*t22*t74)) + 0.0000670905*(-1.*t15*t252*t26 - 1.*t22*t335 + t22*t26*(t204 + t15*t74) - 1.*t15*(t203 + t22*t26*t74))) + t202*(-0.0126*t15*t19 - 0.0599986395*(-1.*t15*t19*t198 + t12*t19*t190*t22 + t30*(t194 + t195 + t206 - 1.*t22*t83 + t193*t22*t83 - 1.*t14*t15*t86) + t19*t22*(t191 + t192 + t205 + t12*t15*t83 - 1.*t14*t34*t83 - 1.*t12*t14*t22*t86)) + 0.0000670905*(-1.*t15*t187*t19 + t180*t19*t22*t26 + t39*(t183 + t184 + t204 + t22*t83 - 1.*t193*t22*t83 + t14*t15*t86) + t19*t22*(t181 + t182 + t203 - 1.*t15*t26*t83 + t14*t43*t83 + t14*t22*t26*t86))) + t143*(0.0126*t170 + 0.0000670905*(t139*t170 + t135*t173 + t92*(t110*t167 + t181 + t182 + t164*t45 + t173*t89 + t152*t95) + t110*(t183 + t184 - 1.*t164*t80 - 1.*t170*t89 - 1.*t167*t92 - 1.*t177*t95)) - 0.0599986395*(t124*t158 + t131*t170 + t92*(-1.*t101*t167 + t191 + t192 - 1.*t164*t36 - 1.*t158*t89 - 1.*t155*t95) + t101*(t194 + t195 + t164*t80 + t170*t89 + t167*t92 + t177*t95)));
  p_output1[4]=t263 + t270 + t280 + t291 + t202*(-0.0599986395*(t315 + t19*t22*(t241 + t242 + t249 + t250 + t316 - 1.*t227*t34) + t30*(t14*t22*t227 + t240 - 1.*t15*t22*t77)) + 0.0000670905*(t319 + t19*t22*(t245 + t246 + t253 + t254 + t320 + t227*t43) + t39*(-1.*t14*t22*t227 + t243 + t15*t22*t77))) + t259*(-0.0599986395*(t322 - 1.*t15*(-1.*t18*t224 + t249 + t250 + t324 + t325 - 1.*t12*t255*t77)) + 0.0000670905*(t326 - 1.*t15*(t12*t224 + t253 + t254 + t328 + t329 + t255*t26*t77))) + t143*(0.0000670905*(t299 + (t110*t233 + t245 + t246 + t303 + t304 + t236*t45)*t92 + t110*(t243 - 1.*t236*t80 - 1.*t233*t92)) - 0.0599986395*(t311 + (-1.*t101*t233 + t241 + t242 + t312 + t313 - 1.*t236*t36)*t92 + t101*(t240 + t236*t80 + t233*t92)));
  p_output1[5]=t263 + t270 + t280 + t291 + t259*(-0.0599986395*(t322 - 1.*t15*(t250 - 1.*t12*t255*t293 - 1.*t18*t295 + t323 + t324 + t325)) + 0.0000670905*(t326 - 1.*t15*(t254 + t255*t26*t293 + t12*t295 + t327 + t328 + t329))) + t202*(-0.0599986395*(t30*(-1.*t15*t22*t293 + t14*t22*t298 + t314) + t315 + t19*t22*(t242 + t250 + t316 + t317 + t323 - 1.*t298*t34)) + 0.0000670905*(t319 + (t15*t22*t293 - 1.*t14*t22*t298 + t318)*t39 + t19*t22*(t246 + t254 + t320 + t321 + t327 + t298*t43))) + t143*(0.0000670905*(t299 + (t246 + t303 + t304 + t110*t307 + t321 + t310*t45)*t92 + t110*(t318 - 1.*t310*t80 - 1.*t307*t92)) - 0.0599986395*(t311 + (t242 - 1.*t101*t307 + t312 + t313 + t317 - 1.*t310*t36)*t92 + t101*(t314 + t310*t80 + t307*t92))) + (-0.0599986395*(t339 + t283*t5) + 0.0000670905*(t283*t3 + t3*t65))*(-1.*var[29] + var[45]);
  p_output1[6]=-0.0000670905*t101 + 0.0599986395*t110;
  p_output1[7]=-0.0000670905*t209 + 0.0599986395*t332;
  p_output1[8]=-0.0000670905*t273 + 0.0599986395*t345;
  p_output1[9]=0.0599986395*t348 - 0.0000670905*t351 - 0.0126*t92;
  p_output1[10]=-0.0126*t19*t22 - 0.0000670905*t354 + 0.0599986395*t357;
  p_output1[11]=0.0126*t15 - 0.0000670905*t360 + 0.0599986395*t363;
  p_output1[12]=-0.00001228561236*t12 - 0.01098695086524*t18;
  p_output1[13]=-0.0126 + 0.0599986395*t366 - 0.0000670905*t368;
  p_output1[14]=-0.02172160456857;
  p_output1[15]=0.0000670905*t101 - 0.0599986395*t110;
  p_output1[16]=t342;
  p_output1[17]=0.0000670905*t273 - 0.0599986395*t345;
  p_output1[18]=-0.0599986395*t348 + 0.0000670905*t351 + 0.0126*t92;
  p_output1[19]=0.0126*t19*t22 + 0.0000670905*t354 - 0.0599986395*t357;
  p_output1[20]=-0.0126*t15 + 0.0000670905*t360 - 0.0599986395*t363;
  p_output1[21]=0.00001228561236*t12 + 0.01098695086524*t18;
  p_output1[22]=0.0126 - 0.0599986395*t366 + 0.0000670905*t368;
  p_output1[23]=0.02172160456857;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
#include "matrix.h"

/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 48 && ncols == 1) && 
      !(mrows == 1 && ncols == 48))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var is wrong.");
    }

  /*  Assign pointers to each input.  */
  var = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 24, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var);


}

#else // MATLAB_MEX_FILE

#include "J_impactDynamics16.hh"

namespace symbolic_expression
{
namespace basic
{

void J_impactDynamics16_raw(double *p_output1, const double *var)
{
  // Call Subroutines
  output1(p_output1, var);

}

}
}

#endif // MATLAB_MEX_FILE
